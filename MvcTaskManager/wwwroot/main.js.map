{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/admin/about/about.component.ts","./src/app/admin/about/about.component.html","./src/app/admin/admin.module.ts","./src/app/admin/check-box-printer/check-box-printer.component.ts","./src/app/admin/check-box-printer/check-box-printer.component.html","./src/app/admin/dashboard/dashboard.component.ts","./src/app/admin/dashboard/dashboard.component.html","./src/app/admin/my-profile/my-profile.component.ts","./src/app/admin/my-profile/my-profile.component.html","./src/app/admin/project/project.component.ts","./src/app/admin/project/project.component.html","./src/app/admin/projects/projects.component.ts","./src/app/admin/projects/projects.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/can-activate-guard.service.ts","./src/app/client-location-status-validator.directive.ts","./src/app/client-location.ts","./src/app/client-locations.service.ts","./src/app/countries.service.ts","./src/app/custome-validatore.service.ts","./src/app/dashboard.service.ts","./src/app/jwt-interceptor.service.ts","./src/app/jwt-un-authorized-interceptor.service.ts","./src/app/login-view-model.ts","./src/app/login.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/project-idunique-validator.directive.ts","./src/app/project.ts","./src/app/projects.service.ts","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/team-size-validator.directive.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  about works!\n</p>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { MyProfileComponent } from \"./my-profile/my-profile.component\";\nimport { AboutComponent } from \"./about/about.component\";\nimport { DashboardService } from \"../dashboard.service\";\nimport { ProjectsComponent } from \"./projects/projects.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { TeamSizeValidatorDirective } from '../team-size-validator.directive';\nimport { ClientLocationStatusValidatorDirective } from '../client-location-status-validator.directive';\nimport { ProjectIDUniqueValidatorDirective } from '../project-idunique-validator.directive';\nimport { ProjectComponent } from './project/project.component';\nimport { CheckBoxPrinterComponent } from './check-box-printer/check-box-printer.component';\n\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    MyProfileComponent,\n    AboutComponent,\n    ProjectsComponent,\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    ProjectComponent,\n    CheckBoxPrinterComponent\n  ],\n  imports: [ CommonModule, FormsModule ],\n  exports: [ DashboardComponent, MyProfileComponent, AboutComponent, ProjectsComponent,ClientLocationStatusValidatorDirective,ProjectIDUniqueValidatorDirective ],\n  providers: [ DashboardService ]\n})\nexport class AdminModule\n{\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-check-box-printer',\n  templateUrl: './check-box-printer.component.html',\n  styleUrls: ['./check-box-printer.component.scss']\n})\nexport class CheckBoxPrinterComponent implements OnInit {\n\n  isChecked:boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void \n  {\n\n  }\n  check(){\n    this.isChecked = true;\n  }\n  \n  unCheck(){\n    this.isChecked = false;\n  }\n}\n","<div>\n    <input type=\"checkbox\" value=\"true\" name=\"isChecked\" id=\"isChecked\" [(ngModel)]=\"isChecked\">\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../../dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit\n{\n  Designation: string = \"\";\n  Username: string = \"\";\n  NoOfTeamMembers: number = 0;\n  TotalCostOfAllProjects: number = 0;\n  PendingTasks: number = 0;\n  UpComingProjects: number = 0;\n  ProjectCost: number = 0;\n  CurrentExpenditure: number = 0;\n  AvailableFunds: number = 0;\n  ToDay: Date = new Date();\n\n  Clients: string[] = [];\n  Projects: string[] = [];\n  Years: number[] = [];\n  TeamMembersSummary: any = [];\n  TeamMembers: any = [];\n\n  constructor(private dashboardService: DashboardService) { }\n\n  ngOnInit()\n  {\n    this.Designation = 'Team Leader';\n    this.Username = 'Scott Smith';\n    this.NoOfTeamMembers = 67;\n    this.TotalCostOfAllProjects = 240;\n    this.PendingTasks = 15;\n    this.UpComingProjects = 0.2;\n    this.ProjectCost = 2113507;\n    this.CurrentExpenditure = 96788;\n    this.AvailableFunds = 52536;\n    this.ToDay = new Date();\n\n    this.Clients = [\n      'ABC Infotech Ltd.',\n      'DEF Software Solutions',\n      'GHI Industries',\n    ];\n\n    this.Projects = ['Project A', 'Project B', 'Project C', 'Project D'];\n\n    for (var i = 2019; i >= 2010; i--)\n    {\n      this.Years.push(i);\n    }\n\n    this.TeamMembersSummary = this.dashboardService.getTeamMembersSummary();\n\n    this.TeamMembers = [\n      {\n        Region: 'East',\n        Members: [\n          { ID: 1, Name: 'Ford', Status: 'Available' },\n          { ID: 2, Name: 'Miller', Status: 'Available' },\n          { ID: 3, Name: 'Jones', Status: 'Busy' },\n          { ID: 4, Name: 'James', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'West',\n        Members: [\n          { ID: 5, Name: 'Anna', Status: 'Available' },\n          { ID: 6, Name: 'Arun', Status: 'Available' },\n          { ID: 7, Name: 'Varun', Status: 'Busy' },\n          { ID: 8, Name: 'Jasmine', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'South',\n        Members: [\n          { ID: 9, Name: 'Krishna', Status: 'Available' },\n          { ID: 10, Name: 'Mohan', Status: 'Available' },\n          { ID: 11, Name: 'Raju', Status: 'Busy' },\n          { ID: 12, Name: 'Farooq', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'North',\n        Members: [\n          { ID: 13, Name: 'Jacob', Status: 'Available' },\n          { ID: 14, Name: 'Smith', Status: 'Available' },\n          { ID: 15, Name: 'Jones', Status: 'Busy' },\n          { ID: 16, Name: 'James', Status: 'Busy' },\n        ],\n      },\n    ];\n  }\n\n  onProjectChange($event: any)\n  {\n    if ($event.target.innerHTML.trim() == 'Project A')\n    {\n      this.ProjectCost = 2113507;\n      this.CurrentExpenditure = 96788;\n      this.AvailableFunds = 52436;\n    } else if ($event.target.innerHTML.trim() == 'Project B')\n    {\n      this.ProjectCost = 88923;\n      this.CurrentExpenditure = 22450;\n      this.AvailableFunds = 2640;\n    } else if ($event.target.innerHTML.trim() == 'Project C')\n    {\n      this.ProjectCost = 662183;\n      this.CurrentExpenditure = 7721;\n      this.AvailableFunds = 9811;\n    } else if ($event.target.innerHTML.trim() == 'Project D')\n    {\n      this.ProjectCost = 928431;\n      this.CurrentExpenditure = 562;\n      this.AvailableFunds = 883;\n    }\n  }\n}\n","<nav>\n  <ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\n    <li class=\"breadcrumb-item active\">Dashboard</li>\n  </ol>\n</nav>\n\n<h5>Dashboard</h5>\n<h6>{{ToDay | date : \"d/M/y\"}}</h6>\n<div class=\"row\">\n  <div class=\"col-lg-3 pb-3\" style=\"background-color:#e9e6e6\">\n    <div class=\"row\">\n      <div class=\"col-11 text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\"\n        style=\"background-color:#a39e9e; font-family:  'Arial Narrow Bold', sans-serif\">{{Designation | uppercase}}\n      </div>\n      <div class=\"col-12 text-center mt-2\">\n        <img src=\"assets/user.png\" width=\"120px\">\n      </div>\n      <div class=\"col-12 text-center pt-2 pb-2 font-weight-bold\" style=\"font-family: Tahoma\">\n        {{Username | lowercase}}\n      </div>\n      <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: Arial\">TEAM SUMMARY</div>\n      <div class=\"col-12 mb-3\">\n        <ul class=\"list-group\">\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n            NO. OF TEAM MEMBERS\n            <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">{{NoOfTeamMembers}}</span>\n          </li>\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n            TOTAL COST OF ALL PROJECTS\n            <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">$ {{TotalCostOfAllProjects}} k</span>\n          </li>\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n            PENDING TASKS\n            <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">{{PendingTasks}}</span>\n          </li>\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n            UPCOMING PROJECTS\n            <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">{{UpComingProjects | percent}}</span>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: 'Arial Narrow'\">CLIENTS</div>\n      <div class=\"col-12\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\" *ngFor=\"let client of Clients\">{{client | slice: 0: 10}}</li>\n        </ul>\n        <!--{{TeamMembersSummary}}-->\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-6\">\n    <div class=\"row\">\n      <div class=\"col-12 pt-0 pb-2\" style=\"background-color:#e9e6e6\">\n        <div class=\"row mt-2\">\n          <div class=\"col-6 text-left\">\n            <div class=\"dropdown\">\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\">\n                Project A\n              </button>\n              <div class=\"dropdown-menu\">\n                <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let project of Projects\" onclick=\"return false\"\n                  (click)=\"onProjectChange($event)\">{{project}}</a>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-6 text-right\">\n            <div class=\"dropdown\">\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\">\n                2019\n              </button>\n              <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let year of Years\">\n                    <span [ngSwitch]=\"year\">\n                      <span *ngSwitchCase=\" '2019' \" style=\"color:green\">{{year}}</span>\n                      <span *ngSwitchCase=\" '2018' \" style=\"color:blue\">{{year}}</span>\n                      <span *ngSwitchCase=\" '2017' \" style=\"color:red\">{{year}}</span>\n                      <span *ngSwitchDefault style=\"color:black\">{{year}}</span>\n                    </span>\n                  </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-auto rounded font-weight-bold\"\n        style=\"background-color: #718d97; font-family: 'Arial Narrow'\">PROJECT BRIEFING</div>\n      <div class=\"col-12\">\n        <table class=\"table table-borderless\">\n          <tr>\n            <td>Project Cost</td>\n            <td>{{ProjectCost | currency: \"INR\" }}</td>\n          </tr>\n          <tr>\n            <td>Current Expenditure</td>\n            <td>{{CurrentExpenditure | currency: \"INR\"}}</td>\n          </tr>\n          <tr>\n            <td>Available Funds</td>\n            <td>{{AvailableFunds | currency: \"INR\"}}</td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-2 rounded font-weight-bold\"\n        style=\"background-color:#718d97; font-family: 'Arial Narrow'\">TEAM MEMBERS SUMMARY</div>\n      <div class=\"col-12\">\n        <table class=\"table\">\n          <tr>\n            <th>Region</th>\n            <th>Team Members Count</th>\n            <th>Temporarily Unavailable Members</th>\n          </tr>\n          <tr *ngFor=\"let teamMemberSumary of TeamMembersSummary\">\n            <td>\n              <b>{{teamMemberSumary.Region}}</b>\n            </td>\n            <td>\n              {{teamMemberSumary.TeamMembersCount}}\n            </td>\n            <td>\n              {{teamMemberSumary.TemporarilyUnavailableMembers}}\n            </td>\n          </tr>\n\n        </table>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-3\" style=\"background-color:#e9e6e6\">\n    <div class=\"row\">\n      <div class=\"col-11 mx-auto mt-1 text-white text-center pt-1 pb-2 mx-2 rounded font-weight-bold\"\n        style=\"background-color:#718d97; font-family: 'Arial Narrow'\">TEAM MEMBERS</div>\n      <div class=\"col-lg-12 pt-2\">\n        <div class=\"accordion\" id=\"accordion1\">\n          <div class=\"card\" *ngFor=\"let teamMembersGroup of TeamMembers; let i = index\">\n\n\n            <div class=\"card-header bg-secondary\" id=\"card1\">\n              <h2 class=\"mb-0\">\n                <button class=\"btn btn-link text-white\" type=\"button\" data-toggle=\"collapse\"\n                  [attr.data-target]=\" '#cardbody' + i \">{{teamMembersGroup.Region}}</button>\n              </h2>\n            </div>\n            <div [id]=\" 'cardbody' + i \" class=\"collapse\" data-parent=\"#accordion1\" [ngClass]=\"(i == 0)? 'show': '' \">\n              <div class=\"card-body\">\n\n                <div *ngIf=\"i == 0; then firstTemplate; else secondTemplate\">\n\n                </div>\n\n                <ng-template #firstTemplate>\n                  <div class=\"card\" *ngFor=\"let member of teamMembersGroup.Members\">\n                    <div class=\"card-header bg-primary text-white\">#{{member.ID}} {{member.Name}}</div>\n                    <div class=\"card-body\">{{member.Status}}</div>\n                  </div>\n                </ng-template>\n\n                <ng-template #secondTemplate>\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let member of teamMembersGroup.Members\">\n                        <td>{{member.ID}}</td>\n                        <td [style.color]=\" (member.Status == 'Busy')? 'red': 'black' \">{{member.Name}}</td>\n                        <td>{{member.Status}}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </ng-template>\n\n\n              </div>\n            </div>\n\n\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  my-profile works!\n</p>\n","import { Component, ContentChild, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Project } from 'src/app/project';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { CheckBoxPrinterComponent } from '../check-box-printer/check-box-printer.component';\n\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnInit {\n\n  @Input(\"currentProject\") project: Project | any;\n  @Input(\"recordIndex\") i: number | any;\n\n  @Output() editClick = new EventEmitter();\n  @Output() deleteClick = new EventEmitter();\n\n  hideDetails: boolean = false;\n\n  constructor(public projectService: ProjectsService) { }\n\n  ngOnInit(): void {\n    this.projectService.MyObservable.subscribe((hide: any) => {\n      this.hideDetails = hide;\n    });\n  }\n\n  onEditClick(event: any, i: number) {\n    this.editClick.emit({ event, i });\n  }\n\n  onDeleteClick(event: any, i: number) {\n    this.deleteClick.emit({ event, i });\n  }\n\n  @ContentChild(\"selectionBox\") selectionBox:\n    CheckBoxPrinterComponent | any = null;\n\n  isAllCheckedChange(b: boolean) {\n    if (b) {\n      this.selectionBox.check();\n    }\n    else {\n      this.selectionBox.unCheck();\n    }\n  }\n\n}\n","<div class=\"card card-primary\">\n    <div class=\"card-header\">\n        <div>#{{project.projectID}}</div>\n        <h5>{{project.projectName}}</h5>\n    </div>\n\n    <div class=\"col-1\">\n        <ng-content></ng-content>\n    </div>\n\n    <div class=\"card-body\">\n        <table class=\"table table-borderless\" [hidden]\n        =\"projectService.hideDetails\">\n            <tr>\n                <th>Date Of Start</th>\n                <td>{{project.dateOfStart}}</td>\n            </tr>\n            <tr>\n                <th>Team Size</th>\n                <td>{{project.teamSize}}</td>\n            </tr>\n            <tr>\n                <th>Client Location</th>\n                <td>{{project.clientLocation?.clientLocationName}}</td>\n            </tr>\n            <tr>\n                <th>Status</th>\n                <td>{{project.status}}</td>\n            </tr>\n        </table>\n    </div>\n    <div class=\"card-footer\">\n        <button class=\"btn btn-info\" (click)=\"onEditClick($event, i)\" data-toggle=\"modal\"\n            data-target=\"#editModal\">Edit</button>&nbsp;\n        <button class=\"btn btn-warning\" (click)=\"onDeleteClick($event, i)\" data-toggle=\"modal\"\n            data-target=\"#deleteModal\">Delete</button>\n    </div>\n</div>","import { Component, OnInit, Query, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { ProjectsService } from \"../../projects.service\";\nimport { Project } from '../../project';\nimport { ClientLocation } from '../../client-location';\nimport { ClientLocationsService } from '../../client-locations.service';\nimport { NgForm } from '@angular/forms';\nimport * as $ from \"jquery\";\nimport { ProjectComponent } from '../project/project.component';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  projects: Project[] = [];\n  clientLocations: ClientLocation[] = [];\n  showLoading: boolean = true;\n\n  newProject: Project = new Project();\n  editProject: Project = new Project();\n  editIndex: any = null;\n  deleteProject: Project = new Project();\n  deleteIndex: any = null;\n  searchBy: string = \"ProjectName\";\n  searchText: string = \"\";\n\n  @ViewChild(\"newForm\") newForm: NgForm | any = null;\n  @ViewChild(\"editForm\") editForm: NgForm | any = null;\n\n  constructor(private projectsService: ProjectsService, private clientLocationsService: ClientLocationsService) {\n  }\n\n  ngOnInit() {\n    this.projectsService.getAllProjects().subscribe(\n      (response: Project[]) => {\n        this.projects = response;\n        this.showLoading = false;\n      }\n    );\n\n    this.clientLocationsService.getClientLocations().subscribe(\n      (response) => {\n        this.clientLocations = response;\n      }\n    );\n  }\n\n  isAllChecked: boolean = false;\n\n  @ViewChildren(\"prj\") projs: QueryList<ProjectComponent> | any = null;\n\n  isAllCheckedChange(event: any) {\n    let proj = this.projs.toArray();\n    for (let i = 0; i < proj.length; i++) {\n      proj[i].isAllCheckedChange(this.isAllChecked);\n    }\n  }\n\n  onNewClick(event: any) {\n    this.newForm.resetForm();\n\n  }\n\n  onSaveClick() {\n    if (this.newForm.valid) {\n      this.newProject.clientLocation.clientLocationID = 0;\n      this.projectsService.insertProject(this.newProject).subscribe((response) => {\n        //Add Project to Grid\n        var p: Project = new Project();\n        p.projectID = response.projectID;\n        p.projectName = response.projectName;\n        p.dateOfStart = response.dateOfStart;\n        p.teamSize = response.teamSize;\n        p.clientLocation = response.clientLocation;\n        p.active = response.active;\n        p.clientLocationID = response.clientLocationID;\n        p.status = response.status;\n        this.projects.push(p);\n\n        //Clear New Project Dialog - TextBoxes\n        this.newProject.projectID = null;\n        this.newProject.projectName = null;\n        this.newProject.dateOfStart = null;\n        this.newProject.teamSize = null;\n        this.newProject.active = false;\n        this.newProject.clientLocationID = null;\n        this.newProject.status = null;\n\n        $(\"newFormCancel\").trigger(\"click\");\n\n      }, (error) => {\n        console.log(error);\n      });\n    }\n  }\n\n  onEditClick(event: any, index: number) {\n    this.editForm.resetForm();\n    setTimeout(() => {\n\n      this.editProject.projectID = this.projects[index].projectID;\n      this.editProject.projectName = this.projects[index].projectName;\n      this.editProject.dateOfStart = this.projects[index].dateOfStart.split(\"/\").reverse().join(\"-\"); //yyyy-MM-dd\n      this.editProject.teamSize = this.projects[index].teamSize;\n      this.editProject.active = this.projects[index].active;\n      this.editProject.clientLocationID = this.projects[index].clientLocationID;\n      this.editProject.clientLocation = this.projects[index].clientLocation;\n      this.editProject.status = this.projects[index].status;\n      this.editIndex = index;\n\n    }, 100);\n  }\n\n  onUpdateClick() {\n    if (this.editForm.valid) {\n      this.projectsService.updateProject(this.editProject).subscribe((response: Project) => {\n        var p: Project = new Project();\n        p.projectID = response.projectID;\n        p.projectName = response.projectName;\n        p.dateOfStart = response.dateOfStart;\n        p.teamSize = response.teamSize;\n        p.clientLocation = response.clientLocation;\n        p.active = response.active;\n        p.clientLocationID = response.clientLocationID;\n        p.status = response.status;\n        this.projects[this.editIndex] = p;\n\n        this.editProject.projectID = null;\n        this.editProject.projectName = null;\n        this.editProject.dateOfStart = null;\n        this.editProject.teamSize = null;\n        this.newProject.active = false;\n        this.newProject.clientLocationID = null;\n        this.newProject.status = null;\n\n        $(\"#editFormCancel\").trigger(\"click\");\n      },\n        (error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  onDeleteClick(event: any, index: number) {\n    this.deleteIndex = index;\n    this.deleteProject.projectID = this.projects[index].projectID;\n    this.deleteProject.projectName = this.projects[index].projectName;\n    this.deleteProject.dateOfStart = this.projects[index].dateOfStart;\n    this.deleteProject.teamSize = this.projects[index].teamSize;\n  }\n\n  onDeleteConfirmClick() {\n    this.projectsService.deleteProject(this.deleteProject.projectID).subscribe(\n      (response) => {\n        this.projects.splice(this.deleteIndex, 1);\n        this.deleteProject.projectID = null;\n        this.deleteProject.projectName = null;\n        this.deleteProject.teamSize = null;\n        this.deleteProject.dateOfStart = null;\n      },\n      (error) => {\n        console.log(error);\n      });\n  }\n\n  onSearchClick() {\n    this.projectsService.SearchProjects(this.searchBy, this.searchText).subscribe(\n      (response: Project[]) => {\n        this.projects = response;\n      },\n      (error) => {\n        console.log(error);\n      });\n  }\n\n  onHideShowDetails(event: any) {\n    this.projectsService.toggleDetails();\n  }\n}\n","<h1>\n  Projects\n  <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:34px\" *ngIf=\"showLoading\"></i>\n</h1>\n<div class=\"row\">\n  <div class=\"col-xl-9 mx-auto\">\n    <div class=\"form-group form-row\">\n\n      <div class=\"col-2\">\n        <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newModal\" (click)=\"onNewClick($event)\">Create\n          Project</button>\n      </div>\n\n      <button class=\"btn btn-secondary\" (click)=\"onHideShowDetails($event)\">Hide/Show Details</button>\n\n      <div class=\"col-1 custom-control custom-checkbox\">\n        <input type=\"checkbox\" value=\"true\" name=\"isAllChecked\" id=\"isAllChecked\" [(ngModel)]=\"isAllChecked\" class=\"custom-control-input\" (change)=\"isAllCheckedChange($event)\">\n        <label class=\"custom-control-label\" for=\"isAllChecked\"></label>\n      </div>\n\n      <label for=\"drpSearchBy\" class=\"col-form-label col-2 text-right\">Search by:</label>\n\n      <div class=\"col-3\">\n        <select class=\"form-control\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n          <option value=\"ProjectID\">Project ID</option>\n          <option value=\"ProjectName\">Project Name</option>\n          <option value=\"DateOfStart\">Date of Start</option>\n          <option value=\"TeamSize\">Team Size</option>\n        </select>\n      </div>\n\n      <label for=\"textSearchText\" class=\"col-form-label col-1 text-right\">Search:</label>\n\n      <div class=\"col-4\">\n        <div class=\"input-group\">\n          <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" [(ngModel)]=\"searchText\">\n          <div class=\"input-group-append\" (click)=\"onSearchClick()\">\n            <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"col-xl-9 mx-auto\">\n    <div class=\"row\">\n\n      <div class=\"col-md-4\" *ngFor=\"let project of projects; let i = index\">\n        <app-project #prj [currentProject]=\"project\" [recordIndex]=\"i\" (editClick)=\"onEditClick($event, i)\"\n          (deleteClick)=\"onDeleteClick($event, i)\">\n        <app-check-box-printer #selectionBox></app-check-box-printer>\n        </app-project>\n\n\n      </div>\n    </div>\n  </div>\n\n</div>\n\n<form #newForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n  <div class=\"modal\" role=\"dialog\" id=\"newModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">New Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewProjectID\" style=\"width:130px\" class=\"form-control\" placeholder=\"Project ID\"\n                name=\"ProjectID\" [(ngModel)]=\"newProject.projectID\" required=\"required\" pattern=\"^[0-9]*$\"\n                appProjectIDUniqueValidator #newProjectID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted), 'is-valid': newProjectID.valid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['required']\">Project\n                ID can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['pattern']\">Project\n                ID should contain numbers only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['uniqueProjectID']\">Duplicate\n                Project ID</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewProjectName\" class=\"form-control\" placeholder=\"Project Name\"\n                name=\"ProjectName\" [(ngModel)]=\"newProject.projectName\" required=\"required\" minlength=\"3\" maxlength=\"30\"\n                pattern=\"^[A-Za-z0-9 /-]*$\" #newProjectName=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted), 'is-valid': newProjectName.valid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['required']\">Project\n                Name can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['pattern']\">Project\n                Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['minlength']\">Project\n                name should be at least 3 characters long</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\n            <div class=\"col-sm-8\">\n              <input type=\"date\" id=\"txtNewDateOfStart\" style=\"width:180px\" class=\"form-control\"\n                placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"newProject.dateOfStart\" required=\"required\"\n                #newDateOfStart=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted), 'is-valid': newDateOfStart.valid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) && newDateOfStart.errors!['required']\">Date\n                of Start can't be blank</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\"\n                name=\"TeamSize\" [(ngModel)]=\"newProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\"\n                appTeamSizeValidator=\"5\" #newTeamSize=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted), 'is-valid': newTeamSize.valid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors!['required']\">Team\n                Size should be a number</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors!['divisible']\">Team\n                Size should be divisble by 5</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check\">\n                <input type=\"checkbox\" id=\"chkNewActive\" value=\"true\" class=\"form-check-input\"\n                  [(ngModel)]=\"newProject.active\" name=\"active\">\n                <label class=\"form-check-label\" for=\"chkNewActive\">Active</label>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"rbNewStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbNewStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusInForce=\"ngModel\">\n                <label for=\"rbNewStatusInForce\" class=\"form-check-label\">In Force</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbNewStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusSupport=\"ngModel\">\n                <label for=\"rbNewStatusSupport\" class=\"form-check-label\">Support</label>\n              </div>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newStatusInForce.invalid && (newStatusInForce.dirty || newStatusInForce.touched || newForm.submitted) && newStatusInForce.errors!['required']\">Please\n                select status</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpNewClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n            <div class=\"col-sm-8\">\n              <select id=\"drpNewClientLocation\" class=\"form-control\" name=\"ClientLocation\"\n                [(ngModel)]=\"newProject.clientLocationID\" required=\"required\" #newClientLocationID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted), 'is-valid': newClientLocationID.valid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\">\n                  {{clientLocation.clientLocationName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) && newClientLocationID.errors!['required']\">Please\n                client location</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newForm.invalid && (newForm.dirty || newForm.touched || newForm.submitted) && (newForm.errors? newForm.errors!['clientLocationStatus'] : false)\">Support\n                projects are not allowed at Tokyo</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"newFormCancel\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Edit Project -->\n<form #editForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n  <div class=\"modal\" role=\"dialog\" id=\"editModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Edit Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditProjectID\" style=\"width:130px\" class=\"form-control-plain-text\"\n                placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"editProject.projectID\" disabled=\"disabled\"\n                required=\"required\" pattern=\"^[0-9]*$\" appProjectIDUniqueValidator #editProjectID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || newForm.submitted), 'is-valid': editProjectID.valid && (editProjectID.dirty || editProjectID.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['required']\">Project\n                ID can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['pattern']\">Project\n                ID should contain numbers only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['uniqueProjectID']\">Duplicate\n                Project ID</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditProjectName\" class=\"form-control\" placeholder=\"Project Name\"\n                name=\"ProjectName\" [(ngModel)]=\"editProject.projectName\" required=\"required\" minlength=\"3\"\n                maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #editProjectName=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted), 'is-valid': editProjectName.valid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['required']\">Project\n                Name can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['pattern']\">Project\n                Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['minlength']\">Project\n                name should be at least 3 characters long</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\n            <div class=\"col-sm-8\">\n              <input type=\"date\" id=\"txtEditDateOfStart\" style=\"width:180px\" class=\"form-control\"\n                placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"editProject.dateOfStart\" required=\"required\"\n                #editDateOfStart=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editDateOfStart.invalid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted), 'is-valid': editDateOfStart.valid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editDateOfStart.invalid && (editForm.submitted) && editDateOfStart.errors!['required']\">Date of\n                Start can't be blank</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\"\n                name=\"TeamSize\" [(ngModel)]=\"editProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\"\n                appTeamSizeValidator=\"5\" #editTeamSize=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted), 'is-valid': editTeamSize.valid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors!['required']\">Team\n                Size should be a number</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors!['divisible']\">Team\n                Size should be divisble by 5</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check\">\n                <input type=\"checkbox\" id=\"chkEditActive\" value=\"true\" class=\"form-check-input\"\n                  [(ngModel)]=\"editProject.active\" name=\"active\">\n                <label class=\"form-check-label\" for=\"chkEditActive\">Active</label>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"rbEditStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbEditStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusInForce=\"ngModel\">\n                <label for=\"rbEditStatusInForce\" class=\"form-check-label\">In Force</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbEditStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusSupport=\"ngModel\">\n                <label for=\"rbEditStatusSupport\" class=\"form-check-label\">Support</label>\n              </div>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editStatusInForce.invalid && (editStatusInForce.dirty || editStatusInForce.touched || editForm.submitted) && editStatusInForce.errors!['required']\">Please\n                select status</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpEditClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n            <div class=\"col-sm-8\">\n              <select id=\"drpEditClientLocation\" class=\"form-control\" name=\"ClientLocation\"\n                [(ngModel)]=\"editProject.clientLocationID\" required=\"required\" #editClientLocationID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted), 'is-valid': editClientLocationID.valid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\">\n                  {{clientLocation.clientLocationName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) && editClientLocationID.errors!['required']\">Please\n                client location</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editForm.invalid && (editForm.dirty || editForm.touched || editForm.submitted) && (editForm.errors? editForm.errors!['clientLocationStatus'] : false)\">Support\n                projects are not allowed at Tokyo</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editFormCancel\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">Update</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n\n<!-- Delete Project -->\n<form>\n  <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Delete Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"text-warning\">Are you sure to delete this Project?</div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteProjectID\" style=\"width:100px\" class=\"form-control-plain-text\"\n                placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"deleteProject.projectID\" disabled=\"disabled\">\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteProjectName\" class=\"form-control-plain-text\" placeholder=\"Project Name\"\n                name=\"ProjectName\" [(ngModel)]=\"deleteProject.projectName\" disabled=\"disabled\">\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n          <button class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from \"./admin/dashboard/dashboard.component\";\nimport { AboutComponent } from \"./admin/about/about.component\";\nimport { ProjectsComponent } from \"./admin/projects/projects.component\";\nimport { LoginComponent } from './login/login.component';\nimport { CanActivateGuardService } from './can-activate-guard.service';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { TasksComponent } from './tasks/tasks.component';\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"login\", pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"signup\", component: SignUpComponent },\n  { path: \"dashboard\", component: DashboardComponent, canActivate: \n  [CanActivateGuardService], data: { expectedRole: \"Admin\" } },\n  { path: \"about\", component: AboutComponent },\n  { path: \"projects\", component: ProjectsComponent, canActivate: [CanActivateGuardService], data: { expectedRole: \"Admin\" } },\n  { path: \"tasks\", component: TasksComponent , canActivate:\n  [CanActivateGuardService],data:{expectedRole: \"Employee\"}}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent\n{\n  constructor(public loginService: LoginService, private domSanitizer: DomSanitizer)\n  {\n  }\n\n  onSearchClick()\n  {\n    console.log(this.loginService.currentUserName);\n  }\n}\n","<nav class=\"navbar navbar-expand-sm bg-success navbar-dark\">\n    <a class=\"navbar-brand\" href=\"#\">\n        Angular Task Manager\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mynav\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"mynav\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n                <a class=\"nav-link\" routerLink=\"dashboard\">Dashboard</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"about\">About</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n                <a class=\"nav-link\" routerLink=\"projects\">Projects</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n                <a class=\"nav-link\" href=\"#\">{{loginService.currentUserName}}</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n                <a class=\"nav-link\" href=\"#\" (click)=\"loginService.Logout()\">Logout</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName == null\">\n                <a class=\"nav-link\" routerLink=\"login\">Login</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName == null\">\n                <a class=\"nav-link\" routerLink=\"signup\">Sign Up</a>\n            </li>\n\n        </ul>\n        <form class=\"form-inline my-2 my-lg-0\">\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"search\"><i class=\"fa fa-search\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n            </div>\n            <button class=\"btn btn-warning my2- my-sm-0\" type=\"button\" (click)=\"onSearchClick()\">Search</button>\n        </form>\n    </div>\n</nav>\n\n<div class=\"container-fluid\">\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { JwtModule } from \"@auth0/angular-jwt\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminModule } from './admin/admin.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JwtInterceptorService } from './jwt-interceptor.service';\nimport { JwtUnAuthorizedInterceptorService } from './jwt-un-authorized-interceptor.service';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { TasksComponent } from './tasks/tasks.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignUpComponent,\n    TasksComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AdminModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () =>\n        {\n          return (sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token : null)\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptorService,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtUnAuthorizedInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateGuardService implements CanActivate\n{\n  constructor(private loginService: LoginService, private router: Router, private jwtHelperService: JwtHelperService)\n  {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean\n  {\n    //console.log(this.router.url);\n    var token = sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token : null;\n    if (this.loginService.isAuthenticated() && this.jwtHelperService.decodeToken(token).role == route.data['expectedRole'])\n    {\n      return true; //the user can navigate to the particular route\n    }\n    else\n    {\n      this.router.navigate([\"login\"]);\n      return false; //the user can't navigate to the particular route\n    }\n  }\n}\n","import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Directive({\n  selector: '[appClientLocationStatusValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: ClientLocationStatusValidatorDirective, multi: true }]\n})\nexport class ClientLocationStatusValidatorDirective implements Validator {\n  constructor() {\n  }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    let isValid = true;\n    if (control.value.ClientLocation == 1 && control.value.Status == \"Support\") {\n      isValid = false; //indicates invalid\n    }\n\n    if (isValid == true) {\n      return null; //valid\n    }\n    else {\n      return { clientLocationStatus: { valid: false } }; //invalid\n    }\n  }\n\n}\n","export class ClientLocation\n{\n    clientLocationID: any;\n    clientLocationName: any;\n\n    constructor()\n    {\n        this.clientLocationID = null;\n        this.clientLocationName = null;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ClientLocation } from './client-location';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientLocationsService\n{\n  urlPrefix: string = \"\"; //make this as empty (\"\") if you are using asp.net core [without CORS]\n\n  constructor(private httpClient: HttpClient)\n  {\n  }\n\n  getClientLocations(): Observable<ClientLocation[]>\n  {\n    return this.httpClient.get<ClientLocation[]>(this.urlPrefix + \"/api/clientlocations\", { responseType: \"json\" });\n  }\n}\n\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Country } from './country';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService\n{\n  constructor(private httpclient:HttpClient)\n  {\n  }\n\n  getCountries(): Observable<Country[]>\n  {\n    return this.httpclient.get<Country[]>\n    (\"/api/countries\",{responseType:\"json\"});    \n  }\n}","import { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormControl, ValidationErrors, Validator, ValidatorFn } from '@angular/forms';\nimport { map, Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomeValidatoreService {\n\n  constructor(private loginService: LoginService) { }\n\n  public minimumAgeValidator(minAge: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (!control.value)\n        return null; //return, if the date of birth is null\n\n      var today = new Date();\n      var dateOfBirth = new Date(control.value);\n      var diffMilliSeconds = Math.abs(today.getTime() - dateOfBirth.getTime());\n      var diffYears = (diffMilliSeconds / (1000 * 60 * 60 * 24)) / 365.25;\n\n      if (diffYears >= minAge)\n        return null; //valid\n      else\n        return { minAge: { valid: false } }; //invalid\n    };\n  }\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n      if (!(formGroup.get(controlToValidate) as FormControl).value)\n        return null; //return, if the confirm password is null\n\n      if ((formGroup.get(controlToValidate) as FormControl).value == (formGroup.get(controlToCompare) as any).value)\n        return null; //valid\n      else {\n        (formGroup.get(controlToValidate) as FormControl).setErrors({ compareValidator: { valid: false } });\n        return { compareValidator: { valid: false } }; //invalid\n      }\n    };\n  }\n\n  public DuplicateEmailValidator(): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\n      return this.loginService.getUserByEmail(control.value)\n      .pipe(map((existingUser:string) => {\n        if (existingUser != null) {\n          return { uniqueEmail: { valid: false } }; //invalid\n        }\n        else {\n          return null;\n        }\n      }));\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DashboardService\n{\n  getTeamMembersSummary(): any[]\n  {\n    var TeamMembersSummary = [\n      { Region: \"East\", TeamMembersCount: 20, TemporarilyUnavailableMembers: 4 },\n      { Region: \"West\", TeamMembersCount: 15, TemporarilyUnavailableMembers: 8 },\n      { Region: \"South\", TeamMembersCount: 17, TemporarilyUnavailableMembers: 1 },\n      { Region: \"North\", TeamMembersCount: 15, TemporarilyUnavailableMembers: 6 }\n    ];\n    return TeamMembersSummary;\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptorService implements HttpInterceptor\n{\n  constructor()\n  {\n  }\n\n  intercept(request : HttpRequest<any>, next : HttpHandler) : Observable<HttpEvent<any>>\n  {\n    var currentUser = { token: \"\" };\n    if (sessionStorage['currentUser'] != null)\n    {\n      currentUser = JSON.parse(sessionStorage['currentUser']);\n    }\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: \"Bearer \" + currentUser.token\n      }}\n    );\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUnAuthorizedInterceptorService implements HttpInterceptor\n{\n  constructor()\n  {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n  {\n    return next.handle(request).pipe(tap(\n\n      (event: HttpEvent<any>) =>\n      {\n        if (event instanceof HttpResponse)\n        {\n          //do something with response\n        }\n      },\n\n      (error: any) =>\n      {\n        if (error instanceof HttpErrorResponse)\n        {\n          if (error.status == 401)\n          {\n            console.log(error);\n            alert(\"401 UnAuthorized\");\n          }\n        }\n      }\n\n    ));\n  }\n}\n\n\n","export class LoginViewModel\n{\n    UserName: string = \"\";\n    Password: string = \"\";\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoginViewModel } from './login-view-model';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { SignUpViewModel } from './sign-up-view-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private httpClient: HttpClient | null = null;\n  urlPrefix: string = \"\"; //make this as empty (\"\") if you are using asp.net core [without CORS]\n\n  constructor(private httpBackend: HttpBackend, \n    private jwtHelperService: JwtHelperService) {\n  }\n\n  currentUserName: any = null;\n\n  public Login(loginViewModel: LoginViewModel): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(this.urlPrefix + \"/authenticate\", loginViewModel, { responseType: \"json\", observe: \"response\" })\n      .pipe(map(response => {\n        if (response) {\n          this.currentUserName = response.body.userName;\n          sessionStorage['currentUser'] = JSON.stringify(response.body);\n          sessionStorage['XSRFRequestToken'] = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n        }\n        return response.body;\n      }));\n  }\n\n  public Register(SignUpViewModel: SignUpViewModel): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);\n\n    return this.httpClient.post<any>(\"/register\", SignUpViewModel, {\n      responseType: \"json\", observe: \"response\"\n    }).pipe(map(response => {\n      if (response) {\n        this.currentUserName = response.body.userName;\n        sessionStorage['currentUser'] = JSON.stringify(response.body);\n        sessionStorage['XSRFRequestToken'] = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n      }\n      return response.body;\n    }));\n\n  }\n\n  getUserByEmail(Email:string):Observable<any>{\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.get<any>(\"/api/getUserByEmail/\"+ Email,{responseType:\"json\"});\n  }\n\n  public Logout() {\n    sessionStorage.removeItem(\"currentUser\");\n    this.currentUserName = null;\n  }\n\n  public isAuthenticated(): boolean {\n    var token = sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token : null;\n    if (this.jwtHelperService.isTokenExpired()) {\n      return false; //token is not valid\n    }\n    else {\n      return true; //token is valid\n    }\n  }\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { LoginViewModel } from '../login-view-model';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit\n{\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: string = \"\";\n\n  constructor(private loginService: LoginService, private router: Router) \n  {\n  }\n\n  ngOnInit()\n  {\n  }\n\n  onLoginClick(event: any)\n  {\n    this.loginService.Login(this.loginViewModel).subscribe(\n      (response) =>\n      {\n        this.router.navigateByUrl(\"/dashboard\");\n      },\n      (error) =>\n      {\n        console.log(error);\n        this.loginError = \"Invalid Username or Password\";\n      },\n    );\n  }\n\n}\n","<form>\n  <div class=\"row\">\n    <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\n      <div class=\"card mt-4\">\n        <div class=\"card-header bg-secondary text-white\">\n          <h3>Login</h3>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"form-group form-row\">\n            <label for=\"UserName\" class=\"col-md-4 col-form-label\">Username</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"Username\" [(ngModel)]=\"loginViewModel.UserName\" name=\"UserName\" autofocus=\"autofocus\">\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"Password\" class=\"col-md-4 col-form-label\">Password</label>\n            <div class=\"col-md-8\">\n              <input type=\"password\" class=\"form-control\" placeholder=\"Password\" [(ngModel)]=\"loginViewModel.Password\" name=\"Password\">\n            </div>\n          </div>\n\n        </div>\n\n        <div class=\"card-footer text-right\">\n          <span class=\"text-danger\">{{loginError}}&nbsp;</span>\n          <button class=\"btn btn-primary\" (click)=\"onLoginClick($event)\">Login</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>","import { Directive } from '@angular/core';\nimport { NG_ASYNC_VALIDATORS, AsyncValidator, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { ProjectsService } from './projects.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Project } from './project';\n\n@Directive({\n  selector: '[appProjectIDUniqueValidator]',\n  providers: [ { provide: NG_ASYNC_VALIDATORS, useExisting: ProjectIDUniqueValidatorDirective, multi: true }]\n})\nexport class ProjectIDUniqueValidatorDirective implements AsyncValidator\n{\n  constructor(private projectsService: ProjectsService)\n  {\n  }\n\n  validate(control: AbstractControl) : Observable<ValidationErrors | null>\n  {\n    return this.projectsService.getProjectByProjectID(control.value).pipe(map( (existingProject: Project) => {\n      if (existingProject != null)\n      {\n        return { uniqueProjectID: { valid: false }};\n      }\n      else\n      {\n        return null;\n      }\n    }));\n  }\n}","import { ClientLocation } from './client-location';\n\nexport class Project\n{\n    projectID: number | any;\n    projectName: string | any;\n    dateOfStart: string | any;\n    teamSize: number | any;\n    active: boolean | any;\n    status: string | any;\n    clientLocationID: number | any;\n    clientLocation: ClientLocation | any;\n\n    constructor()\n    {\n        this.projectID = null;\n        this.projectName = null;\n        this.dateOfStart = null;\n        this.teamSize = null;\n        this.active = true;\n        this.status = null;\n        this.clientLocationID = null;\n        this.clientLocation = new ClientLocation();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, Observer } from 'rxjs';\nimport { Project } from './project';\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService\n{\n  urlPrefix: string = \"\"; //make this as empty (\"\") if you are using asp.net core [without CORS]\n\n  public MyObservable:Observable<boolean>|any;\n  private MyObservers:Observer<boolean>[]=[];\n\n  constructor(private httpClient: HttpClient)\n  {\n    this.MyObservable=Observable.create((observer:Observer<boolean>)=>{\n      this.MyObservers.push(observer);\n    });\n  }\n\n hideDetails:boolean = false;\n\n toggleDetails()\n  {\n    this.hideDetails = !this.hideDetails;\n    for(let i=0;i<this.MyObservers.length;i++)\n    {\n      this.MyObservers[i].next(this.hideDetails);\n    }\n  }\n  \n  getAllProjects(): Observable<Project[]>\n  {\n    return this.httpClient.get<Project[]>(this.urlPrefix + \"/api/projects\", { responseType: \"json\" })\n      .pipe(map(\n        (data: Project[]) =>\n        {\n          for (let i = 0; i < data.length; i++)\n          {\n            //data[i].teamSize = data[i].teamSize * 100;\n          }\n          return data;\n        }\n      ));\n  }\n\n  getProjectByProjectID(ProjectID: number): Observable<Project>\n  {\n    return this.httpClient.get<Project>(this.urlPrefix + \"/api/projects/searchbyprojectid/\" + ProjectID, { responseType: \"json\" });\n  }\n  \n  insertProject(newProject: Project): Observable<Project>\n  {\n    var requestHeaders = new HttpHeaders();\n    requestHeaders = requestHeaders.set(\"X-XSRF-TOKEN\", sessionStorage['XSRFRequestToken']);\n    return this.httpClient.post<Project>(this.urlPrefix + \"/api/projects\", newProject, { headers: requestHeaders, responseType: \"json\" });\n  }\n\n  updateProject(existingProject: Project): Observable<Project>\n  {\n    return this.httpClient.put<Project>(this.urlPrefix + \"/api/projects\", existingProject, { responseType: \"json\" });\n  }\n\n  deleteProject(ProjectID: number): Observable<string>\n  {\n    return this.httpClient.delete<string>(this.urlPrefix + \"/api/projects?ProjectID=\" + ProjectID);\n  }\n\n  SearchProjects(searchBy: string, searchText: string): Observable<Project[]>\n  {\n    return this.httpClient.get<Project[]>(this.urlPrefix + \"/api/projects/search/\" + searchBy + \"/\" + searchText, { responseType: \"json\" });\n  }\n\n \n}\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { CountriesService } from '../countries.service';\nimport { Country } from '../country';\n\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\nimport { CustomeValidatoreService } from '../custome-validatore.service';\nimport { SignUpViewModel } from '../sign-up-view-model';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n  signUpForm: FormGroup | any = null;\n  genders = [\"male\", \"female\"];\n  countries: Country[] = [];\n  registerError: string | null = null;\n\n  constructor(private countriesService: CountriesService,\n    private formBuilder: FormBuilder,\n    private customValidatorsService: CustomeValidatoreService, \n    private loginService: LoginService, private router: Router) {\n  }\n\n  ngOnInit() {\n\n    this.countriesService.getCountries().subscribe((response)=>{\n      this.countries = response;\n    });\n\n    this.signUpForm = this.formBuilder.group({\n      personName: this.formBuilder.group({\n        firstName: [null, [Validators.required, Validators.minLength(2)]],\n        lastName: [null, [Validators.required, Validators.minLength(2)]],\n      }),\n\n      email: [null, [Validators.required, Validators.email],\n    [this.customValidatorsService.DuplicateEmailValidator()],{updateOn:'blur'}],\n      mobile: [null, [Validators.required, Validators.pattern(/^[789]\\d{9}$/)]],\n      dateOfBirth: [null, [Validators.required, this.customValidatorsService.minimumAgeValidator(18)]],\n      password: [null, [Validators.required]],\n      confirmPassword: [null, [Validators.required]],\n      gender: [null, [Validators.required]],\n      countryID: [null,[Validators.required]],\n      receiveNewsLetters: [null],\n      skills: this.formBuilder.array([])\n    }, {\n      validators: [\n        this.customValidatorsService.compareValidator(\"confirmPassword\", \"password\")\n      ]\n    });\n\n    this.signUpForm.valueChanges.subscribe((value: any) => {\n      //console.log(value);\n    });\n\n  }\n\n  onSubmitClick() {\n    //Display current form value\n    this.signUpForm[\"submitted\"] = true;\n    console.log(this.signUpForm);\n\n    if(this.signUpForm.valid)\n    {\n      var signUpViewModel = this.signUpForm.value as SignUpViewModel;\n      this.loginService.Register(signUpViewModel).subscribe((response)=>{\n        this.router.navigate([\"tasks\"]);\n      },\n      (error)=>{\n        console.log(error);\n        this.registerError = \"Unable to submit\";\n      });\n    }\n    //setValue\n    // this.signUpForm.setValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\",\n    //   mobile: \"9876543210\",\n    //   dateOfBirth: \"2020-01-01\",\n    //   gender: \"male\",\n    //   countryID: 3,\n    //   receiveNewsLetters: true\n    // });\n\n    //patchValue\n    // this.signUpForm.patchValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n\n    //reset\n    //this.signUpForm.reset();\n\n    //reset with Parameters\n    // this.signUpForm.reset({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n  }\n\n  onAddSkill() {\n    var formGroup = new FormGroup({\n      skillName: new FormControl(null, [Validators.required]),\n      skillLevel: new FormControl(null, [Validators.required])\n    });\n\n    (<FormArray>this.signUpForm.get(\"skills\")).push(formGroup);\n  }\n\n  onRemoveClick(index: number) {\n    (<FormArray>this.signUpForm.get(\"skills\")).removeAt(index);\n  }\n}","<div class=\"row\">\n  <div class=\"col-md-8 col-xl-6 mx-auto\">\n\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmitClick()\">\n\n      <div class=\"card mt-1\">\n        <div class=\"card-header\">\n          <h4>Sign Up</h4>\n        </div>\n\n        <div class=\"card-body\">\n\n          <div class=\"form-group form-row\" formGroupName=\"personName\">\n            <label for=\"firstName\" class=\"col-md-4 col-form-label\">First Name:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" class=\"form-control\" formControlName=\"firstName\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('personName.firstName').valid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.required\">First name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.minlength\">First name should contain at least 2 characters</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\" formGroupName=\"personName\">\n            <label for=\"lastName\" class=\"col-md-4 col-form-label\">Last Name:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" class=\"form-control\" formControlName=\"lastName\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('personName.lastName').valid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.required\">Last name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.minlength\">Last name should contain at least 2 characters</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"email\" class=\"col-md-4 col-form-label\">Email:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" class=\"form-control\" formControlName=\"email\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('email').valid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.required\">Email can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.email\">Email is invalid</span>\n            \n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.uniqueEmail\">Email already exists</span>\n              \n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"mobile\" class=\"col-md-4 col-form-label\">Mobile:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"mobile\" id=\"mobile\" placeholder=\"Mobile\" class=\"form-control\" formControlName=\"mobile\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('mobile').valid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.required\">Mobile can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.pattern\">Mobile is invalid</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\">Date of Birth:</label>\n            <div class=\"col-md-8\">\n              <input type=\"date\" name=\"dateOfBirth\" id=\"dateOfBirth\" placeholder=\"Date of Birth\" class=\"form-control\" formControlName=\"dateOfBirth\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('dateOfBirth').valid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.required\">Date of Birth can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.minAge\">Minimum Age must be 18</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"password\" class=\"col-md-4 col-form-label\">Password:</label>\n            <div class=\"col-md-8\">\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" class=\"form-control\" formControlName=\"password\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('password').valid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) && signUpForm.get('password').errors?.required\">Password can't be blank</span>\n            </div>\n          </div>\n\n\n          <div class=\"form-group form-row\">\n            <label for=\"confirmPassword\" class=\"col-md-4 col-form-label\">Confirm Password:</label>\n            <div class=\"col-md-8\">\n              <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Confirm Password\" class=\"form-control\" formControlName=\"confirmPassword\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('confirmPassword').valid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) && signUpForm.get('confirmPassword').errors?.required\">Confirm Password can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.invalid && (signUpForm.dirty || signUpForm.touched || signUpForm.submitted) && signUpForm.errors?.compareValidator\">Password and Confirm Password do not match</span>\n            </div>\n          </div>\n\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\">Gender:</label>\n            <div class=\"col-md-8\">\n\n              <div class=\"form-check-label form-check-inline\" *ngFor=\"let gender of genders\">\n                <input type=\"radio\" name=\"gender\" [id]=\"gender\" [value]=\"gender\" class=\"form-check-input\" formControlName=\"gender\">\n                <label [for]=\"gender\" class=\"form-check-label\">{{gender}}</label>\n              </div>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('gender').invalid && (signUpForm.get('gender').dirty || signUpForm.get('gender').touched || signUpForm.submitted) && signUpForm.get('gender').errors?.required\">Please select gender</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"countryID\" class=\"col-md-4 col-form-label\">Country:</label>\n            <div class=\"col-md-8\">\n              <select name=\"countryID\" id=\"countryID\" class=\"form-control\" formControlName=\"countryID\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('countryID').valid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let country of countries\" [value]=\"country.countryID\">\n                  {{country.countryName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) && signUpForm.get('countryID').errors?.required\">Please select country</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\"></label>\n            <div class=\"col-md-8\">\n              <input type=\"checkbox\" name=\"receiveNewsLetters\" id=\"receiveNewsLetters\" value=\"true\" class=\"form-check-input\" formControlName=\"receiveNewsLetters\">\n              <label for=\"receiveNewsLetters\" class=\"form-check-label\">Receive News Letters</label>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\">Skills:</label>\n            <div class=\"col-md-8\" formArrayName=\"skills\">\n              <div class=\"row\" *ngFor=\"let skill of signUpForm.get('skills').controls; let i = index\" [formGroupName]=\"i\">\n\n                <div class=\"col-5 mb-3\">\n                  <input type=\"text\" name=\"skillName\" id=\"skillName\" placeholder=\"Skill Name\" formControlName=\"skillName\" class=\"form-control\" [ngClass]=\"{\n                    'is-invalid': skill.get('skillName').invalid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted),\n    \n                    'is-valid': skill.get('skillName').valid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted) }\">\n                </div>\n\n                <div class=\"col-4\">\n                  <select name=\"level\" id=\"level\" formControlName=\"skillLevel\" class=\"form-control\" [ngClass]=\"{\n                    'is-invalid': skill.get('skillLevel').invalid && (skill.get('skillLevel').dirty || skill.get('skillLevel').touched || signUpForm.submitted),\n    \n                    'is-valid': skill.get('skillLevel').valid && (skill.get('skillLevel').dirty || skill.get('skillLevel').touched || signUpForm.submitted) }\">\n                    <option value=\"null\">Please Select</option>\n                    <option value=\"Beginner\">Beginner</option>\n                    <option value=\"Intermediate\">Intermediate</option>\n                    <option value=\"Professional\">Professional</option>\n                    <option value=\"Expert\">Expert</option>\n                  </select>\n                </div>\n\n                <div class=\"col-3\">\n                  <button class=\"btn btn-danger\" type=\"button\" (click)=\"onRemoveClick(i)\">Remove</button>\n                </div>\n              </div>\n\n              <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddSkill()\">Add Skill</button>\n            </div>\n\n          </div>\n\n          <!-- {{signUpForm.value | json}} -->\n        </div>\n\n        <div class=\"card-footer\">\n          <button class=\"btn btn-success float-right\">Create Account</button>\n          <div class=\"text-danger\">{{registerError}}</div>\n        </div>\n\n      </div>\n\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tasks works!</p>\n","import { Directive, Input } from '@angular/core';\nimport { Validator, AbstractControl, ValidationErrors, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true }]\n})\nexport class TeamSizeValidatorDirective implements Validator\n{\n  constructor()\n  {\n  }\n\n  @Input(\"appTeamSizeValidator\") n: number | any = 0;\n\n  validate(control: AbstractControl): ValidationErrors | null\n  {\n    let currentValue = control.value;\n    let isValid = currentValue % this.n == 0;\n\n    if (isValid)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { divisible: { valid: false } }; //indicates invalid\n    }\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}