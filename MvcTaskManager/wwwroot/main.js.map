{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/Directives/alert.directive.ts","./src/app/Directives/client-location-status-validator.directive.ts","./src/app/Directives/project-idunique-validator.directive.ts","./src/app/Directives/repeater.directive.ts","./src/app/Directives/team-size-validator.directive.ts","./src/app/Services/can-activate-guard.service.ts","./src/app/Services/client-locations.service.ts","./src/app/Services/countries.service.ts","./src/app/Services/custome-validatore.service.ts","./src/app/Services/dashboard.service.ts","./src/app/Services/jwt-interceptor.service.ts","./src/app/Services/jwt-un-authorized-interceptor.service.ts","./src/app/Services/login.service.ts","./src/app/Services/projects.service.ts","./src/app/Services/router-logger.service.ts","./src/app/admin/about/about.component.ts","./src/app/admin/about/about.component.html","./src/app/admin/admin-routing/admin-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/admin/check-box-printer/check-box-printer.component.ts","./src/app/admin/check-box-printer/check-box-printer.component.html","./src/app/admin/dashboard/dashboard.component.ts","./src/app/admin/dashboard/dashboard.component.html","./src/app/admin/my-profile/my-profile.component.ts","./src/app/admin/my-profile/my-profile.component.html","./src/app/admin/project-details/project-details.component.ts","./src/app/admin/project-details/project-details.component.html","./src/app/admin/project/project.component.ts","./src/app/admin/project/project.component.html","./src/app/admin/projects/projects.component.ts","./src/app/admin/projects/projects.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/client-location.ts","./src/app/employee/employee-routing/employee-routing.module.ts","./src/app/employee/employee.module.ts","./src/app/employee/tasks/tasks.component.ts","./src/app/employee/tasks/tasks.component.html","./src/app/filter.pipe.ts","./src/app/login-view-model.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/number-to-word.pipe.ts","./src/app/paging.pipe.ts","./src/app/project.ts","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Directive, ElementRef, HostBinding, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appAlert]'\n})\nexport class AlertDirective {\n  @Input(\"error\") error: string | any = null;\n  @HostBinding(\"title\") title: string | null = null;\n\n  constructor(private elementRef: ElementRef, private renderer2: Renderer2) {\n  }\n\n  divElement: any;\n  spanElement: any;\n  spanText: any;\n\n  ngOnInit() {\n    /* div */\n    this.divElement = this.renderer2.createElement(\"div\"); //<div></div>\n\n    this.renderer2.setAttribute(this.divElement, \"role\", \"alert\"); //<div role=\"alert\"> </div>\n\n    this.renderer2.setAttribute(this.divElement, \"class\", \"alert alert-danger fade show\");\n    //<div role=\"alert\" class=\"alert alert-danger fade show\"> </div>\n\n    this.renderer2.setStyle(this.divElement, \"transition\", \"transform 0.5s\");\n    //<div role=\"alert\" class=\"alert alert-danger fade show\" style=\"transition: transform 0.5s\"> </div>\n\n    /* span */\n    this.spanElement = this.renderer2.createElement(\"span\");\n    this.renderer2.setAttribute(this.spanElement, \"class\", \"message\");\n    //<span class=\"message\"></span>\n\n    /* spanText */\n    this.spanText = this.renderer2.createText(this.error);\n    this.renderer2.appendChild(this.spanElement, this.spanText);\n    //<span class=\"message\">${this.error}</span>\n\n    this.renderer2.appendChild(this.divElement, this.spanElement);\n    //<div role=\"alert\" class=\"alert alert-danger fade show\" style=\"transition: transform 0.5s\"> <span class=\"message\">${this.error}</span> </div>\n\n    this.elementRef.nativeElement.appendChild(this.divElement);\n\n    this.title = \"Please try again!\";\n  }\n\n  @HostListener(\"mouseenter\", [\"$event\"])\n  onMouseEnter(event: any) {\n    //this.elementRef.nativeElement.querySelector(\".alert\").style.transform = \"scale(1.1)\";\n    this.renderer2.setStyle(this.divElement, \"transform\", \"scale(1.1)\");\n  }\n\n  @HostListener(\"mouseleave\", [\"$event\"])\n  onMouseLeave() {\n    //this.elementRef.nativeElement.querySelector(\".alert\").style.transform = \"scale(1)\";\n    this.renderer2.setStyle(this.divElement, \"transform\", \"scale(1)\");\n  }\n}\n","import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Directive({\n  selector: '[appClientLocationStatusValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: ClientLocationStatusValidatorDirective, multi: true }]\n})\nexport class ClientLocationStatusValidatorDirective implements Validator {\n  constructor() {\n  }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    let isValid = true;\n    if (control.value.ClientLocation == 1 && control.value.Status == \"Support\") {\n      isValid = false; //indicates invalid\n    }\n\n    if (isValid == true) {\n      return null; //valid\n    }\n    else {\n      return { clientLocationStatus: { valid: false } }; //invalid\n    }\n  }\n\n}\n","import { Directive } from '@angular/core';\nimport { NG_ASYNC_VALIDATORS, AsyncValidator, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { ProjectsService } from '../Services/projects.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Project } from '../project';\n\n@Directive({\n  selector: '[appProjectIDUniqueValidator]',\n  providers: [ { provide: NG_ASYNC_VALIDATORS, useExisting: ProjectIDUniqueValidatorDirective, multi: true }]\n})\nexport class ProjectIDUniqueValidatorDirective implements AsyncValidator\n{\n  constructor(private projectsService: ProjectsService)\n  {\n  }\n\n  validate(control: AbstractControl) : Observable<ValidationErrors | null>\n  {\n    return this.projectsService.getProjectByProjectID(control.value).pipe(map( (existingProject: Project) => {\n      if (existingProject != null)\n      {\n        return { uniqueProjectID: { valid: false }};\n      }\n      else\n      {\n        return null;\n      }\n    }));\n  }\n}","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRepeater]'\n})\nexport class RepeaterDirective {\n  @Input(\"appRepeater\") n: number = 0;\n\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>) {\n    this.viewContainerRef.clear();\n  }\n\n  ngOnInit() {\n    for (let i = 0; i < this.n; i++) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef, { $implicit: i });\n    }\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { Validator, AbstractControl, ValidationErrors, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true }]\n})\nexport class TeamSizeValidatorDirective implements Validator\n{\n  constructor()\n  {\n  }\n\n  @Input(\"appTeamSizeValidator\") n: number | any = 0;\n\n  validate(control: AbstractControl): ValidationErrors | null\n  {\n    let currentValue = control.value;\n    let isValid = currentValue % this.n == 0;\n\n    if (isValid)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { divisible: { valid: false } }; //indicates invalid\n    }\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateGuardService implements CanActivate\n{\n  constructor(private loginService: LoginService, private router: Router, private jwtHelperService: JwtHelperService)\n  {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean\n  {\n    //console.log(this.router.url);\n    var token = sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token : null;\n    if (this.loginService.isAuthenticated() && this.jwtHelperService.decodeToken(token).role == route.data['expectedRole'])\n    {\n      return true; //the user can navigate to the particular route\n    }\n    else\n    {\n      this.router.navigate([\"login\"]);\n      return false; //the user can't navigate to the particular route\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ClientLocation } from '../client-location';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientLocationsService\n{\n  urlPrefix: string = \"\"; //make this as empty (\"\") if you are using asp.net core [without CORS]\n\n  constructor(private httpClient: HttpClient)\n  {\n  }\n\n  getClientLocations(): Observable<ClientLocation[]>\n  {\n    return this.httpClient.get<ClientLocation[]>(this.urlPrefix + \"/api/clientlocations\", { responseType: \"json\" });\n  }\n}\n\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Country } from '../country';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService\n{\n  constructor(private httpclient:HttpClient)\n  {\n  }\n\n  getCountries(): Observable<Country[]>\n  {\n    return this.httpclient.get<Country[]>\n    (\"/api/countries\",{responseType:\"json\"});    \n  }\n}","import { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormControl, ValidationErrors, Validator, ValidatorFn } from '@angular/forms';\nimport { map, Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomeValidatoreService {\n\n  constructor(private loginService: LoginService) { }\n\n  public minimumAgeValidator(minAge: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (!control.value)\n        return null; //return, if the date of birth is null\n\n      var today = new Date();\n      var dateOfBirth = new Date(control.value);\n      var diffMilliSeconds = Math.abs(today.getTime() - dateOfBirth.getTime());\n      var diffYears = (diffMilliSeconds / (1000 * 60 * 60 * 24)) / 365.25;\n\n      if (diffYears >= minAge)\n        return null; //valid\n      else\n        return { minAge: { valid: false } }; //invalid\n    };\n  }\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n      if (!(formGroup.get(controlToValidate) as FormControl).value)\n        return null; //return, if the confirm password is null\n\n      if ((formGroup.get(controlToValidate) as FormControl).value == (formGroup.get(controlToCompare) as any).value)\n        return null; //valid\n      else {\n        (formGroup.get(controlToValidate) as FormControl).setErrors({ compareValidator: { valid: false } });\n        return { compareValidator: { valid: false } }; //invalid\n      }\n    };\n  }\n\n  public DuplicateEmailValidator(): AsyncValidatorFn {\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\n      return this.loginService.getUserByEmail(control.value)\n      .pipe(map((existingUser:string) => {\n        if (existingUser != null) {\n          return { uniqueEmail: { valid: false } }; //invalid\n        }\n        else {\n          return null;\n        }\n      }));\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DashboardService\n{\n  getTeamMembersSummary(): any[]\n  {\n    var TeamMembersSummary = [\n      { Region: \"East\", TeamMembersCount: 20, TemporarilyUnavailableMembers: 4 },\n      { Region: \"West\", TeamMembersCount: 15, TemporarilyUnavailableMembers: 8 },\n      { Region: \"South\", TeamMembersCount: 17, TemporarilyUnavailableMembers: 1 },\n      { Region: \"North\", TeamMembersCount: 15, TemporarilyUnavailableMembers: 6 }\n    ];\n    return TeamMembersSummary;\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptorService implements HttpInterceptor\n{\n  constructor()\n  {\n  }\n\n  intercept(request : HttpRequest<any>, next : HttpHandler) : Observable<HttpEvent<any>>\n  {\n    var currentUser = { token: \"\" };\n    if (sessionStorage['currentUser'] != null)\n    {\n      currentUser = JSON.parse(sessionStorage['currentUser']);\n    }\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: \"Bearer \" + currentUser.token\n      }}\n    );\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUnAuthorizedInterceptorService implements HttpInterceptor\n{\n  constructor()\n  {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n  {\n    return next.handle(request).pipe(tap(\n\n      (event: HttpEvent<any>) =>\n      {\n        if (event instanceof HttpResponse)\n        {\n          //do something with response\n        }\n      },\n\n      (error: any) =>\n      {\n        if (error instanceof HttpErrorResponse)\n        {\n          if (error.status == 401)\n          {\n            console.log(error);\n            alert(\"401 UnAuthorized\");\n          }\n        }\n      }\n\n    ));\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoginViewModel } from '../login-view-model';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { SignUpViewModel } from '../sign-up-view-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private httpClient: HttpClient | null = null;\n  urlPrefix: string = \"\"; //make this as empty (\"\") if you are using asp.net core [without CORS]\n\n  constructor(private httpBackend: HttpBackend, \n    private jwtHelperService: JwtHelperService) {\n  }\n\n  currentUserName: any = null;\n\n  public Login(loginViewModel: LoginViewModel): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(this.urlPrefix + \"/authenticate\", loginViewModel, { responseType: \"json\", observe: \"response\" })\n      .pipe(map(response => {\n        if (response) {\n          this.currentUserName = response.body.userName;\n          sessionStorage['currentUser'] = JSON.stringify(response.body);\n          sessionStorage['XSRFRequestToken'] = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n        }\n        return response.body;\n      }));\n  }\n\n  public Register(SignUpViewModel: SignUpViewModel): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);\n\n    return this.httpClient.post<any>(\"/register\", SignUpViewModel, {\n      responseType: \"json\", observe: \"response\"\n    }).pipe(map(response => {\n      if (response) {\n        this.currentUserName = response.body.userName;\n        sessionStorage['currentUser'] = JSON.stringify(response.body);\n        sessionStorage['XSRFRequestToken'] = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n      }\n      return response.body;\n    }));\n\n  }\n\n  getUserByEmail(Email:string):Observable<any>{\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.get<any>(\"/api/getUserByEmail/\"+ Email,{responseType:\"json\"});\n  }\n\n  public Logout() {\n    sessionStorage.removeItem(\"currentUser\");\n    this.currentUserName = null;\n  }\n\n  public isAuthenticated(): boolean {\n    var token = sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token : null;\n    if (this.jwtHelperService.isTokenExpired()) {\n      return false; //token is not valid\n    }\n    else {\n      return true; //token is valid\n    }\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Project } from '../project';\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService\n{\n  urlPrefix: string = \"\"; //make this as empty (\"\") if you are using asp.net core [without CORS]\n  public MySubject: BehaviorSubject<boolean>;\n\n  constructor(private httpClient: HttpClient)\n  {\n    this.MySubject = new BehaviorSubject<boolean>(false);\n  }\n\n  toggleDetails()\n  {\n    this.MySubject.next(!this.MySubject.value);\n  }\n\n  getAllProjects(): Observable<Project[]>\n  {\n    return this.httpClient.get<Project[]>(this.urlPrefix + \"/api/projects\", { responseType: \"json\" })\n      .pipe(map(\n        (data: Project[]) =>\n        {\n          for (let i = 0; i < data.length; i++)\n          {\n            //data[i].teamSize = data[i].teamSize * 100;\n          }\n          return data;\n        }\n      ));\n  }\n\n  getProjectByProjectID(ProjectID: number): Observable<Project>\n  {\n    return this.httpClient.get<Project>(this.urlPrefix + \"/api/projects/searchbyprojectid/\" + ProjectID, { responseType: \"json\" });\n  }\n\n  insertProject(newProject: Project): Observable<Project>\n  {\n    debugger;\n    var requestHeaders = new HttpHeaders();\n    requestHeaders = requestHeaders.set(\"X-XSRF-TOKEN\", sessionStorage['XSRFRequestToken']);\n    return this.httpClient.post<Project>(\"/api/projects\", newProject, { headers: requestHeaders, responseType: \"json\" });\n  }\n\n  updateProject(existingProject: Project): Observable<Project>\n  {\n    return this.httpClient.put<Project>(this.urlPrefix + \"/api/projects\", existingProject, { responseType: \"json\" });\n  }\n\n  deleteProject(ProjectID: number): Observable<string>\n  {\n    return this.httpClient.delete<string>(this.urlPrefix + \"/api/projects?ProjectID=\" + ProjectID);\n  }\n\n  SearchProjects(searchBy: string, searchText: string): Observable<Project[]>\n  {\n    return this.httpClient.get<Project[]>(this.urlPrefix + \"/api/projects/search/\" + searchBy + \"/\" + searchText, { responseType: \"json\" });\n  }\n}\n","import { HttpBackend, HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterLoggerService {\n  private httpClient: HttpClient | any = null;\n  currentUserName: string | null = null;\n  private urlPrefix: string = '';\n\n  constructor(private httpBackend: HttpBackend) {\n  }\n\n  public log(logMsg: string): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post(this.urlPrefix + \"/api/routerlogger\", { log: logMsg },\n      //{ headers: new HttpHeaders().set(\"content-type\", \"text/plain\") }\n    );\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\nAbout Works!!\n</p>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CanActivateGuardService } from 'src/app/Services/can-activate-guard.service';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { ProjectsComponent } from '../projects/projects.component';\nimport { ProjectDetailsComponent } from '../project-details/project-details.component';\n\nconst routes: Routes = [\n\n    {\n        path: \"admin\", canActivate: [CanActivateGuardService], data: { expectedRole: \"Admin\" }, children: [\n            { path: \"dashboard\", component: DashboardComponent, },\n            { path: \"projects\", component: ProjectsComponent },\n            { path: \"projects/view/:projectid\", component: ProjectDetailsComponent },\n        ]\n    },\n\n];\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [RouterModule]\n})\nexport class AdminRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { MyProfileComponent } from \"./my-profile/my-profile.component\";\nimport { AboutComponent } from \"./about/about.component\";\nimport { DashboardService } from \"../Services/dashboard.service\";\nimport { ProjectsComponent } from \"./projects/projects.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { TeamSizeValidatorDirective } from '../Directives/team-size-validator.directive';\nimport { ClientLocationStatusValidatorDirective } from '../Directives/client-location-status-validator.directive';\nimport { ProjectIDUniqueValidatorDirective } from '../Directives/project-idunique-validator.directive';\nimport { ProjectComponent } from './project/project.component';\nimport { CheckBoxPrinterComponent } from './check-box-printer/check-box-printer.component';\nimport { NumberToWordPipe } from '../number-to-word.pipe';\nimport { FilterPipe } from '../filter.pipe';\nimport { PagingPipe } from '../paging.pipe';\nimport { ProjectDetailsComponent } from './project-details/project-details.component';\nimport { AdminRoutingModule } from './admin-routing/admin-routing.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    MyProfileComponent,\n    AboutComponent,\n    ProjectsComponent,\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    ProjectComponent,\n    CheckBoxPrinterComponent,\n    NumberToWordPipe,\n    FilterPipe,\n    PagingPipe,\n    ProjectDetailsComponent\n\n  ],\n  imports: [ CommonModule, FormsModule,AdminRoutingModule,RouterModule ],\n  exports: [ DashboardComponent, MyProfileComponent, AboutComponent, ProjectsComponent,ClientLocationStatusValidatorDirective,ProjectIDUniqueValidatorDirective ],\n  providers: [ DashboardService ]\n})\nexport class AdminModule\n{\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-check-box-printer',\n  templateUrl: './check-box-printer.component.html',\n  styleUrls: ['./check-box-printer.component.scss']\n})\nexport class CheckBoxPrinterComponent implements OnInit {\n\n  isChecked:boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void \n  {\n\n  }\n  check(){\n    this.isChecked = true;\n  }\n  \n  unCheck(){\n    this.isChecked = false;\n  }\n}\n","<div>\n    <input type=\"checkbox\" value=\"true\" name=\"isChecked\" id=\"isChecked\" [(ngModel)]=\"isChecked\">\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../../Services/dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit\n{\n  Designation: string = \"\";\n  Username: string = \"\";\n  NoOfTeamMembers: number = 0;\n  TotalCostOfAllProjects: number = 0;\n  PendingTasks: number = 0;\n  UpComingProjects: number = 0;\n  ProjectCost: number = 0;\n  CurrentExpenditure: number = 0;\n  AvailableFunds: number = 0;\n  ToDay: Date = new Date();\n\n  Clients: string[] = [];\n  Projects: string[] = [];\n  Years: number[] = [];\n  TeamMembersSummary: any = [];\n  TeamMembers: any = [];\n\n  constructor(private dashboardService: DashboardService) { }\n\n  ngOnInit()\n  {\n    this.Designation = 'Team Leader';\n    this.Username = 'Scott Smith';\n    this.NoOfTeamMembers = 67;\n    this.TotalCostOfAllProjects = 240;\n    this.PendingTasks = 15;\n    this.UpComingProjects = 0.2;\n    this.ProjectCost = 2113507;\n    this.CurrentExpenditure = 96788;\n    this.AvailableFunds = 52536;\n    this.ToDay = new Date();\n\n    this.Clients = [\n      'ABC Infotech Ltd.',\n      'DEF Software Solutions',\n      'GHI Industries',\n    ];\n\n    this.Projects = ['Project A', 'Project B', 'Project C', 'Project D'];\n\n    for (var i = 2019; i >= 2010; i--)\n    {\n      this.Years.push(i);\n    }\n\n    this.TeamMembersSummary = this.dashboardService.getTeamMembersSummary();\n\n    this.TeamMembers = [\n      {\n        Region: 'East',\n        Members: [\n          { ID: 1, Name: 'Ford', Status: 'Available' },\n          { ID: 2, Name: 'Miller', Status: 'Available' },\n          { ID: 3, Name: 'Jones', Status: 'Busy' },\n          { ID: 4, Name: 'James', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'West',\n        Members: [\n          { ID: 5, Name: 'Anna', Status: 'Available' },\n          { ID: 6, Name: 'Arun', Status: 'Available' },\n          { ID: 7, Name: 'Varun', Status: 'Busy' },\n          { ID: 8, Name: 'Jasmine', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'South',\n        Members: [\n          { ID: 9, Name: 'Krishna', Status: 'Available' },\n          { ID: 10, Name: 'Mohan', Status: 'Available' },\n          { ID: 11, Name: 'Raju', Status: 'Busy' },\n          { ID: 12, Name: 'Farooq', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'North',\n        Members: [\n          { ID: 13, Name: 'Jacob', Status: 'Available' },\n          { ID: 14, Name: 'Smith', Status: 'Available' },\n          { ID: 15, Name: 'Jones', Status: 'Busy' },\n          { ID: 16, Name: 'James', Status: 'Busy' },\n        ],\n      },\n    ];\n  }\n\n  onProjectChange($event: any)\n  {\n    if ($event.target.innerHTML.trim() == 'Project A')\n    {\n      this.ProjectCost = 2113507;\n      this.CurrentExpenditure = 96788;\n      this.AvailableFunds = 52436;\n    } else if ($event.target.innerHTML.trim() == 'Project B')\n    {\n      this.ProjectCost = 88923;\n      this.CurrentExpenditure = 22450;\n      this.AvailableFunds = 2640;\n    } else if ($event.target.innerHTML.trim() == 'Project C')\n    {\n      this.ProjectCost = 662183;\n      this.CurrentExpenditure = 7721;\n      this.AvailableFunds = 9811;\n    } else if ($event.target.innerHTML.trim() == 'Project D')\n    {\n      this.ProjectCost = 928431;\n      this.CurrentExpenditure = 562;\n      this.AvailableFunds = 883;\n    }\n  }\n}\n","<nav>\n  <ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\n    <li class=\"breadcrumb-item active\">Dashboard</li>\n  </ol>\n</nav>\n\n<h5>Dashboard</h5>\n<h6>{{ToDay | date : \"d/M/y\"}}</h6>\n<div class=\"row\">\n  <div class=\"col-lg-3 pb-3\" style=\"background-color:#e9e6e6\">\n    <div class=\"row\">\n      <div class=\"col-11 text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\"\n        style=\"background-color:#a39e9e; font-family:  'Arial Narrow Bold', sans-serif\">{{Designation | uppercase}}\n      </div>\n      <div class=\"col-12 text-center mt-2\">\n        <img src=\"assets/user.png\" width=\"120px\">\n      </div>\n      <div class=\"col-12 text-center pt-2 pb-2 font-weight-bold\" style=\"font-family: Tahoma\">\n        {{Username | lowercase}}\n      </div>\n      <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: Arial\">TEAM SUMMARY</div>\n      <div class=\"col-12 mb-3\">\n        <ul class=\"list-group\">\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n            NO. OF TEAM MEMBERS\n            <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">{{NoOfTeamMembers}}</span>\n          </li>\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n            TOTAL COST OF ALL PROJECTS\n            <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">$ {{TotalCostOfAllProjects}} k</span>\n          </li>\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n            PENDING TASKS\n            <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">{{PendingTasks}}</span>\n          </li>\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n            UPCOMING PROJECTS\n            <span class=\"badge badge-secondary badge-pill\" style=\"font-size:13px\">{{UpComingProjects | percent}}</span>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: 'Arial Narrow'\">CLIENTS</div>\n      <div class=\"col-12\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\" *ngFor=\"let client of Clients\">{{client | slice: 0: 10}}</li>\n        </ul>\n        <!--{{TeamMembersSummary}}-->\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-6\">\n    <div class=\"row\">\n      <div class=\"col-12 pt-0 pb-2\" style=\"background-color:#e9e6e6\">\n        <div class=\"row mt-2\">\n          <div class=\"col-6 text-left\">\n            <div class=\"dropdown\">\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\">\n                Project A\n              </button>\n              <div class=\"dropdown-menu\">\n                <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let project of Projects\" onclick=\"return false\"\n                  (click)=\"onProjectChange($event)\">{{project}}</a>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-6 text-right\">\n            <div class=\"dropdown\">\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\">\n                2019\n              </button>\n              <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let year of Years\">\n                    <span [ngSwitch]=\"year\">\n                      <span *ngSwitchCase=\" '2019' \" style=\"color:green\">{{year}}</span>\n                      <span *ngSwitchCase=\" '2018' \" style=\"color:blue\">{{year}}</span>\n                      <span *ngSwitchCase=\" '2017' \" style=\"color:red\">{{year}}</span>\n                      <span *ngSwitchDefault style=\"color:black\">{{year}}</span>\n                    </span>\n                  </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-auto rounded font-weight-bold\"\n        style=\"background-color: #718d97; font-family: 'Arial Narrow'\">PROJECT BRIEFING</div>\n      <div class=\"col-12\">\n        <table class=\"table table-borderless\">\n          <tr>\n            <td>Project Cost</td>\n            <td>{{ProjectCost | currency: \"INR\" }}</td>\n          </tr>\n          <tr>\n            <td>Current Expenditure</td>\n            <td>{{CurrentExpenditure | currency: \"INR\"}}</td>\n          </tr>\n          <tr>\n            <td>Available Funds</td>\n            <td>{{AvailableFunds | currency: \"INR\"}}</td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-2 rounded font-weight-bold\"\n        style=\"background-color:#718d97; font-family: 'Arial Narrow'\">TEAM MEMBERS SUMMARY</div>\n      <div class=\"col-12\">\n        <table class=\"table\">\n          <tr>\n            <th>Region</th>\n            <th>Team Members Count</th>\n            <th>Temporarily Unavailable Members</th>\n          </tr>\n          <tr *ngFor=\"let teamMemberSumary of TeamMembersSummary\">\n            <td>\n              <b>{{teamMemberSumary.Region}}</b>\n            </td>\n            <td>\n              {{teamMemberSumary.TeamMembersCount}}\n            </td>\n            <td>\n              {{teamMemberSumary.TemporarilyUnavailableMembers}}\n            </td>\n          </tr>\n\n        </table>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-3\" style=\"background-color:#e9e6e6\">\n    <div class=\"row\">\n      <div class=\"col-11 mx-auto mt-1 text-white text-center pt-1 pb-2 mx-2 rounded font-weight-bold\"\n        style=\"background-color:#718d97; font-family: 'Arial Narrow'\">TEAM MEMBERS</div>\n      <div class=\"col-lg-12 pt-2\">\n        <div class=\"accordion\" id=\"accordion1\">\n          <div class=\"card\" *ngFor=\"let teamMembersGroup of TeamMembers; let i = index\">\n\n\n            <div class=\"card-header bg-secondary\" id=\"card1\">\n              <h2 class=\"mb-0\">\n                <button class=\"btn btn-link text-white\" type=\"button\" data-toggle=\"collapse\"\n                  [attr.data-target]=\" '#cardbody' + i \">{{teamMembersGroup.Region}}</button>\n              </h2>\n            </div>\n            <div [id]=\" 'cardbody' + i \" class=\"collapse\" data-parent=\"#accordion1\" [ngClass]=\"(i == 0)? 'show': '' \">\n              <div class=\"card-body\">\n\n                <div *ngIf=\"i == 0; then firstTemplate; else secondTemplate\">\n\n                </div>\n\n                <ng-template #firstTemplate>\n                  <div class=\"card\" *ngFor=\"let member of teamMembersGroup.Members\">\n                    <div class=\"card-header bg-primary text-white\">#{{member.ID}} {{member.Name}}</div>\n                    <div class=\"card-body\">{{member.Status}}</div>\n                  </div>\n                </ng-template>\n\n                <ng-template #secondTemplate>\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let member of teamMembersGroup.Members\">\n                        <td>{{member.ID}}</td>\n                        <td [style.color]=\" (member.Status == 'Busy')? 'red': 'black' \">{{member.Name}}</td>\n                        <td>{{member.Status}}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </ng-template>\n\n\n              </div>\n            </div>\n\n\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  my-profile works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/project';\nimport { ProjectsService } from 'src/app/Services/projects.service';\n\n@Component({\n  selector: 'app-project-details',\n  templateUrl: './project-details.component.html',\n  styleUrls: ['./project-details.component.scss']\n})\n\nexport class ProjectDetailsComponent implements OnInit {\n  project: Project;\n  routeParmsSubscription: Subscription | any = null;\n\n  constructor(private activatedRoute: ActivatedRoute, private projectsService: ProjectsService) {\n    this.project = new Project();\n  }\n\n  ngOnInit() {\n    this.routeParmsSubscription = this.activatedRoute.params.subscribe((params) => {\n      let pid = params[\"projectid\"];\n\n      this.projectsService.getProjectByProjectID(pid).subscribe((proj: Project) => {\n        this.project = proj;\n      });\n\n    });\n  }\n\n  ngOnDestroy() {\n    this.routeParmsSubscription.unsubscribe();\n  }\n}","<div class=\"col-md-8 col-lg-6 col-xl-5 mx-auto\">\n    <div class=\"card card-primary mb-1\">\n\n      <div class=\"card-header\">\n        <div>#{{project.projectID}}</div>\n        <h5>{{project.projectName}}</h5>\n      </div>\n\n      <div class=\"card-body\">\n        <table class=\"table table-borderless table-sm\">\n          <tr>\n            <th>Date of Start</th>\n            <td>{{project.dateOfStart}}</td>\n          </tr>\n          <tr>\n            <th>Team Size</th>\n            <td>\n              <span>{{project.teamSize}} </span>\n              <span class=\"text-info\">{{project.teamSize | numberToWord}}</span>\n            </td>\n          </tr>\n          <tr>\n            <th>Client Location</th>\n            <td>{{project.clientLocation?.clientLocationName}}</td>\n          </tr>\n          <tr>\n            <th>Status</th>\n            <td>{{project.status}}</td>\n          </tr>\n        </table>\n      </div>\n\n      <div class=\"card-footer\">\n        <a class=\"btn btn-info\" [routerLink]=\" [ '/admin', 'projects' ] \">\n          Back\n        </a>\n      </div>\n    </div>\n  </div>","import { Component, OnInit, Input, EventEmitter, Output, ContentChild, ContentChildren, QueryList, SimpleChanges, OnChanges, DoCheck, AfterContentChecked, AfterContentInit, AfterViewInit, AfterViewChecked, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Project } from 'src/app/project';\nimport { ProjectsService } from 'src/app/Services/projects.service';\nimport { CheckBoxPrinterComponent } from '../check-box-printer/check-box-printer.component';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnChanges, OnInit, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input(\"currentProject\") project: Project | any;\n  @Input(\"recordIndex\") i: number = 0;\n\n  @Output() editClick = new EventEmitter();\n  @Output() deleteClick = new EventEmitter();\n\n  MySubscription: Subscription | any;\n\n  hideDetails: boolean = false;\n\n  constructor(public projectsService: ProjectsService) {\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    //console.info(\"--------------ngOnChanges called\");\n\n    for (let propName in simpleChanges) {\n      let chng = simpleChanges[propName];\n      let cur = JSON.stringify(chng.currentValue);\n      let prev = JSON.stringify(chng.previousValue);\n      //console.log(`${propName}: currentValue = ${cur}, previousValue = ${prev}`);\n    }\n\n    if (simpleChanges[\"project\"]) {\n      //this.project.teamSize += 1;\n    }\n  }\n\n  ngOnInit() {\n    //console.info(\"--------------ngOnInit called\");\n    this.MySubscription = this.projectsService.MySubject.subscribe((hide) => {\n      this.hideDetails = hide;\n    });\n  }\n\n  ngDoCheck() {\n    //console.info(\"--------------ngDoCheck called\");\n  }\n\n  ngAfterContentInit() {\n    //console.info(\"--------------ngAfterContentInit called\");\n    //console.log(this.selectionBoxes.toArray());\n  }\n\n  ngAfterContentChecked() {\n    //console.info(\"--------------ngAfterContentChecked called\");\n  }\n\n  ngAfterViewInit() {\n    //console.info(\"--------------ngAfterViewInit called\");\n    //console.log(this.tbl);\n  }\n\n  @ViewChild(\"tbl\") tbl: ElementRef | any = null;\n\n  ngAfterViewChecked() {\n    //console.info(\"--------------ngAfterViewChecked called\");\n  }\n\n  onEditClick(event: any, i: number) {\n    this.editClick.emit({ event, i });\n  }\n\n  onDeleteClick(event: any, i: number) {\n    this.deleteClick.emit({ event, i });\n  }\n\n  ngOnDestroy() {\n    //console.info(\"--------------ngOnDestroy called\");\n    this.MySubscription.unsubscribe();\n  }\n\n  @ContentChildren(\"selectionBox\") selectionBoxes: QueryList<CheckBoxPrinterComponent> | any = null;\n\n  isAllCheckedChange(b: boolean) {\n    let selectionBox = this.selectionBoxes.toArray();\n    if (b) {\n      for (let i = 0; i < selectionBox.length; i++) {\n        selectionBox[i].check();\n      }\n    }\n    else {\n      for (let i = 0; i < selectionBox.length; i++) {\n        selectionBox[i].unCheck();\n      }\n    }\n  }\n}\n","<div class=\"card card-primary mb-1\">\n\n    <div class=\"card-header\">\n      <div class=\"row\">\n        <div class=\"col-11\">\n          <div>#{{project.projectID}}</div>\n          <h5>{{project.projectName}}</h5>\n        </div>\n        <div class=\"col-1\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  \n    <div class=\"card-body\">\n      <table class=\"table table-borderless table-sm\" [hidden]=\"hideDetails\" #tbl>\n        <tr>\n          <th>Date of Start</th>\n          <td>{{project.dateOfStart}}</td>\n        </tr>\n        <tr>\n          <th>Team Size</th>\n          <td>\n            <span>{{project.teamSize}} </span>\n            <span class=\"text-info\">{{project.teamSize | numberToWord}}</span>\n          </td>\n        </tr>\n        <tr>\n          <th>Client Location</th>\n          <td>{{project.clientLocation?.clientLocationName}}</td>\n        </tr>\n        <tr>\n          <th>Status</th>\n          <td>{{project.status}}</td>\n        </tr>\n      </table>\n    </div>\n  \n    <div class=\"card-footer\">\n      <button class=\"btn btn-info\" (click)=\"onEditClick($event, i)\" data-toggle=\"modal\"\n        data-target=\"#editModal\">Edit</button>&nbsp;\n      <button class=\"btn btn-warning\" (click)=\"onDeleteClick($event, i)\" data-toggle=\"modal\"\n        data-target=\"#deleteModal\">Delete</button>\n        \n        <a class=\"btn btn-primary\" [routerLink]=\" [ '/admin', 'projects', 'view', project.projectID] \">Learn More</a>\n     \n        <!-- /projects/view/1 -->\n    </div>\n  </div>","import { Component, OnInit, Query, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { ProjectsService } from \"../../Services/projects.service\";\nimport { Project } from '../../project';\nimport { ClientLocation } from '../../client-location';\nimport { ClientLocationsService } from '../../Services/client-locations.service';\nimport { NgForm } from '@angular/forms';\nimport * as $ from \"jquery\";\nimport { ProjectComponent } from '../project/project.component';\nimport { FilterPipe } from 'src/app/filter.pipe';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n\n  projects: Project[] = [];\n  clientLocations: ClientLocation[] = [];\n  showLoading: boolean = true;\n  newProject: Project = new Project();\n  editProject: Project = new Project();\n  editIndex: any = null;\n  deleteProject: Project = new Project();\n  deleteIndex: any = null;\n  searchBy: string = \"projectName\";\n  searchText: string = \"\";\n  currentPageIndex:number=0;\n  pages:any[]=[];\n  pageSize:number=3;\n\n  @ViewChild(\"newForm\") newForm: NgForm | any = null;\n  @ViewChild(\"editForm\") editForm: NgForm | any = null;\n\n  constructor(private projectsService: ProjectsService, private clientLocationsService: ClientLocationsService) {\n  }\n\n  ngOnInit() {\n    this.projectsService.getAllProjects().subscribe(\n      (response: Project[]) => {\n        this.projects = response;\n        this.showLoading = false;\n      }\n    );\n\n    this.clientLocationsService.getClientLocations().subscribe(\n      (response) => {\n        this.clientLocations = response;\n      }\n    );\n  }\n\n  calculateNoOfPages()\n  {\n    let filterPipe = new FilterPipe();\n    var resultProjects = filterPipe.transform(this.projects, this.searchBy, this.searchText);\n    var noOfPages = Math.ceil(resultProjects.length  / this.pageSize);\n\n    this.pages = [];\n    for (let i = 0; i < noOfPages; i++)\n    {\n      this.pages.push( { pageIndex: i });\n    }\n\n    this.currentPageIndex = 0;\n  }\n\n  isAllChecked: boolean = false;\n\n  @ViewChildren(\"prj\") projs: QueryList<ProjectComponent> | any = null;\n\n  isAllCheckedChange(event: any) {\n    let proj = this.projs.toArray();\n    for (let i = 0; i < proj.length; i++) {\n      proj[i].isAllCheckedChange(this.isAllChecked);\n    }\n  }\n\n  onNewClick(event: any) {\n    this.newForm.resetForm();\n\n  }\n\n  onSaveClick() {\n    if (this.newForm.valid) {\n      this.newProject.clientLocation.clientLocationID = 0;\n      this.projectsService.insertProject(this.newProject).subscribe((response) => {\n        //Add Project to Grid\n        var p: Project = new Project();\n        p.projectID = response.projectID;\n        p.projectName = response.projectName;\n        p.dateOfStart = response.dateOfStart;\n        p.teamSize = response.teamSize;\n        p.clientLocation = response.clientLocation;\n        p.active = response.active;\n        p.clientLocationID = response.clientLocationID;\n        p.status = response.status;\n        this.projects.push(p);\n\n        //Clear New Project Dialog - TextBoxes\n        this.newProject.projectID = null;\n        this.newProject.projectName = null;\n        this.newProject.dateOfStart = null;\n        this.newProject.teamSize = null;\n        this.newProject.active = false;\n        this.newProject.clientLocationID = null;\n        this.newProject.status = null;\n\n        $(\"newFormCancel\").trigger(\"click\");\n\n      }, (error) => {\n        console.log(error);\n      });\n    }\n  }\n\n  onEditClick(event: any, index: number) {\n    this.editForm.resetForm();\n    setTimeout(() => {\n\n      this.editProject.projectID = this.projects[index].projectID;\n      this.editProject.projectName = this.projects[index].projectName;\n      this.editProject.dateOfStart = this.projects[index].dateOfStart.split(\"/\").reverse().join(\"-\"); //yyyy-MM-dd\n      this.editProject.teamSize = this.projects[index].teamSize;\n      this.editProject.active = this.projects[index].active;\n      this.editProject.clientLocationID = this.projects[index].clientLocationID;\n      this.editProject.clientLocation = this.projects[index].clientLocation;\n      this.editProject.status = this.projects[index].status;\n      this.editIndex = index;\n\n    }, 100);\n  }\n\n  onUpdateClick() {\n    if (this.editForm.valid) {\n      this.projectsService.updateProject(this.editProject).subscribe((response: Project) => {\n        var p: Project = new Project();\n        p.projectID = response.projectID;\n        p.projectName = response.projectName;\n        p.dateOfStart = response.dateOfStart;\n        p.teamSize = response.teamSize;\n        p.clientLocation = response.clientLocation;\n        p.active = response.active;\n        p.clientLocationID = response.clientLocationID;\n        p.status = response.status;\n        this.projects[this.editIndex] = p;\n\n        this.editProject.projectID = null;\n        this.editProject.projectName = null;\n        this.editProject.dateOfStart = null;\n        this.editProject.teamSize = null;\n        this.newProject.active = false;\n        this.newProject.clientLocationID = null;\n        this.newProject.status = null;\n\n        $(\"#editFormCancel\").trigger(\"click\");\n      },\n        (error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  onDeleteClick(event: any, index: number) {\n    this.deleteIndex = index;\n    this.deleteProject.projectID = this.projects[index].projectID;\n    this.deleteProject.projectName = this.projects[index].projectName;\n    this.deleteProject.dateOfStart = this.projects[index].dateOfStart;\n    this.deleteProject.teamSize = this.projects[index].teamSize;\n  }\n\n  onDeleteConfirmClick() {\n    this.projectsService.deleteProject(this.deleteProject.projectID).subscribe(\n      (response) => {\n        this.projects.splice(this.deleteIndex, 1);\n        this.deleteProject.projectID = null;\n        this.deleteProject.projectName = null;\n        this.deleteProject.teamSize = null;\n        this.deleteProject.dateOfStart = null;\n      },\n      (error) => {\n        console.log(error);\n      });\n  }\n\n  \n  \n  onSearchClick()\n  {\n    // this.projectsService.SearchProjects(this.searchBy, this.searchText).subscribe(\n    //   (response: Project[]) =>\n    //   {\n    //     this.projects = response;\n    //   },\n    //   (error) => \n    //   {\n    //     console.log(error);\n    //   });\n  }\n\n  onSearchTextKeyup(event: any)\n  {\n    this.calculateNoOfPages();\n  }\n\n  onHideShowDetails(event: any)\n  {\n    this.projectsService.toggleDetails();\n  }\n\n  onPageIndexClicked(pageIndex: number)\n  {\n    this.currentPageIndex = pageIndex;\n  }\n}","<h1>\n  Projects\n  <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:34px\" *ngIf=\"showLoading\"></i>\n</h1>\n<div class=\"row\">\n  <div class=\"col-xl-9 mx-auto\">\n    <div class=\"form-group form-row\">\n\n      <div class=\"col-2\">\n        <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newModal\" (click)=\"onNewClick($event)\">Create\n          Project</button>\n      </div>\n\n      <button class=\"btn btn-secondary\" (click)=\"onHideShowDetails($event)\">Hide/Show Details</button>\n\n      <div class=\"col-1 custom-control custom-checkbox\">\n        <input type=\"checkbox\" value=\"true\" name=\"isAllChecked\" id=\"isAllChecked\" [(ngModel)]=\"isAllChecked\"\n          class=\"custom-control-input\" (change)=\"isAllCheckedChange($event)\">\n        <label class=\"custom-control-label\" for=\"isAllChecked\"></label>\n      </div>\n\n      <label for=\"drpSearchBy\" class=\"col-form-label col-2 text-right\">Search by:</label>\n\n      <div class=\"col-3\">\n        <select class=\"form-control\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n          <option value=\"ProjectID\">Project ID</option>\n          <option value=\"ProjectName\">Project Name</option>\n          <option value=\"DateOfStart\">Date of Start</option>\n          <option value=\"TeamSize\">Team Size</option>\n        </select>\n      </div>\n\n      <label for=\"textSearchText\" class=\"col-form-label col-1 text-right\">Search:</label>\n\n      <div class=\"col-4\">\n        <div class=\"input-group\">\n          <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" [(ngModel)]=\"searchText\"\n            (keyup)=\"onSearchTextKeyup($event)\">\n          <!-- <div class=\"input-group-append\" (click)=\"onSearchClick()\">\n            <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n          </div> -->\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"col-xl-9 mx-auto\">\n    <div class=\"row\">\n\n      <div class=\"col-md-4\" *ngFor=\"let project of projects\n       | filter:searchBy:searchText | paging:currentPageIndex:pageSize; let i = index\">\n\n        <app-project #prj [currentProject]=\"project\" [recordIndex]=\"i\" (editClick)=\"onEditClick($event, i)\"\n          (deleteClick)=\"onDeleteClick($event, i)\">\n          <app-check-box-printer #selectionBox></app-check-box-printer>\n        </app-project>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <ul class=\"pagination justify-content-center mt-1\">\n\n          <li class=\"page-item\" *ngFor=\"let page of pages\" (click)=\"onPageIndexClicked(page.pageIndex)\"\n            [ngClass]=\" { 'active': page.pageIndex == currentPageIndex}\">\n            <a href=\"#\" onclick=\"return false\" class=\"page-link\">\n              {{page.pageIndex + 1}}\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<form #newForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n  <div class=\"modal\" role=\"dialog\" id=\"newModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">New Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewProjectID\" style=\"width:130px\" class=\"form-control\" placeholder=\"Project ID\"\n                name=\"ProjectID\" [(ngModel)]=\"newProject.projectID\" required=\"required\" pattern=\"^[0-9]*$\"\n                appProjectIDUniqueValidator #newProjectID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted), 'is-valid': newProjectID.valid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['required']\">Project\n                ID can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['pattern']\">Project\n                ID should contain numbers only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors!['uniqueProjectID']\">Duplicate\n                Project ID</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewProjectName\" class=\"form-control\" placeholder=\"Project Name\"\n                name=\"ProjectName\" [(ngModel)]=\"newProject.projectName\" required=\"required\" minlength=\"3\" maxlength=\"30\"\n                pattern=\"^[A-Za-z0-9 /-]*$\" #newProjectName=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted), 'is-valid': newProjectName.valid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['required']\">Project\n                Name can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['pattern']\">Project\n                Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors!['minlength']\">Project\n                name should be at least 3 characters long</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\n            <div class=\"col-sm-8\">\n              <input type=\"date\" id=\"txtNewDateOfStart\" style=\"width:180px\" class=\"form-control\"\n                placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"newProject.dateOfStart\" required=\"required\"\n                #newDateOfStart=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted), 'is-valid': newDateOfStart.valid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) && newDateOfStart.errors!['required']\">Date\n                of Start can't be blank</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\"\n                name=\"TeamSize\" [(ngModel)]=\"newProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\"\n                appTeamSizeValidator=\"5\" #newTeamSize=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted), 'is-valid': newTeamSize.valid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors!['required']\">Team\n                Size should be a number</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors!['divisible']\">Team\n                Size should be divisble by 5</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check\">\n                <input type=\"checkbox\" id=\"chkNewActive\" value=\"true\" class=\"form-check-input\"\n                  [(ngModel)]=\"newProject.active\" name=\"active\">\n                <label class=\"form-check-label\" for=\"chkNewActive\">Active</label>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"rbNewStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbNewStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusInForce=\"ngModel\">\n                <label for=\"rbNewStatusInForce\" class=\"form-check-label\">In Force</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbNewStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusSupport=\"ngModel\">\n                <label for=\"rbNewStatusSupport\" class=\"form-check-label\">Support</label>\n              </div>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newStatusInForce.invalid && (newStatusInForce.dirty || newStatusInForce.touched || newForm.submitted) && newStatusInForce.errors!['required']\">Please\n                select status</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpNewClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n            <div class=\"col-sm-8\">\n              <select id=\"drpNewClientLocation\" class=\"form-control\" name=\"ClientLocation\"\n                [(ngModel)]=\"newProject.clientLocationID\" required=\"required\" #newClientLocationID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted), 'is-valid': newClientLocationID.valid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\">\n                  {{clientLocation.clientLocationName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) && newClientLocationID.errors!['required']\">Please\n                client location</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"newForm.invalid && (newForm.dirty || newForm.touched || newForm.submitted) && (newForm.errors? newForm.errors!['clientLocationStatus'] : false)\">Support\n                projects are not allowed at Tokyo</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"newFormCancel\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Edit Project -->\n<form #editForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\n  <div class=\"modal\" role=\"dialog\" id=\"editModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Edit Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditProjectID\" style=\"width:130px\" class=\"form-control-plain-text\"\n                placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"editProject.projectID\" disabled=\"disabled\"\n                required=\"required\" pattern=\"^[0-9]*$\" appProjectIDUniqueValidator #editProjectID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || newForm.submitted), 'is-valid': editProjectID.valid && (editProjectID.dirty || editProjectID.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['required']\">Project\n                ID can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['pattern']\">Project\n                ID should contain numbers only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors!['uniqueProjectID']\">Duplicate\n                Project ID</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditProjectName\" class=\"form-control\" placeholder=\"Project Name\"\n                name=\"ProjectName\" [(ngModel)]=\"editProject.projectName\" required=\"required\" minlength=\"3\"\n                maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #editProjectName=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted), 'is-valid': editProjectName.valid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['required']\">Project\n                Name can't be blank</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['pattern']\">Project\n                Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors!['minlength']\">Project\n                name should be at least 3 characters long</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\n            <div class=\"col-sm-8\">\n              <input type=\"date\" id=\"txtEditDateOfStart\" style=\"width:180px\" class=\"form-control\"\n                placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"editProject.dateOfStart\" required=\"required\"\n                #editDateOfStart=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editDateOfStart.invalid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted), 'is-valid': editDateOfStart.valid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editDateOfStart.invalid && (editForm.submitted) && editDateOfStart.errors!['required']\">Date of\n                Start can't be blank</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\"\n                name=\"TeamSize\" [(ngModel)]=\"editProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\"\n                appTeamSizeValidator=\"5\" #editTeamSize=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted), 'is-valid': editTeamSize.valid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\"\n                *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors!['required']\">Team\n                Size should be a number</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors!['divisible']\">Team\n                Size should be divisble by 5</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check\">\n                <input type=\"checkbox\" id=\"chkEditActive\" value=\"true\" class=\"form-check-input\"\n                  [(ngModel)]=\"editProject.active\" name=\"active\">\n                <label class=\"form-check-label\" for=\"chkEditActive\">Active</label>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"rbEditStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbEditStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusInForce=\"ngModel\">\n                <label for=\"rbEditStatusInForce\" class=\"form-check-label\">In Force</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbEditStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\"\n                  [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusSupport=\"ngModel\">\n                <label for=\"rbEditStatusSupport\" class=\"form-check-label\">Support</label>\n              </div>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editStatusInForce.invalid && (editStatusInForce.dirty || editStatusInForce.touched || editForm.submitted) && editStatusInForce.errors!['required']\">Please\n                select status</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpEditClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n            <div class=\"col-sm-8\">\n              <select id=\"drpEditClientLocation\" class=\"form-control\" name=\"ClientLocation\"\n                [(ngModel)]=\"editProject.clientLocationID\" required=\"required\" #editClientLocationID=\"ngModel\"\n                [ngClass]=\"{ 'is-invalid': editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted), 'is-valid': editClientLocationID.valid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\">\n                  {{clientLocation.clientLocationName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) && editClientLocationID.errors!['required']\">Please\n                client location</span>\n\n              <span class=\"text-danger\"\n                *ngIf=\"editForm.invalid && (editForm.dirty || editForm.touched || editForm.submitted) && (editForm.errors? editForm.errors!['clientLocationStatus'] : false)\">Support\n                projects are not allowed at Tokyo</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editFormCancel\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">Update</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n\n<!-- Delete Project -->\n<form>\n  <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Delete Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"text-warning\">Are you sure to delete this Project?</div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteProjectID\" style=\"width:100px\" class=\"form-control-plain-text\"\n                placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"deleteProject.projectID\" disabled=\"disabled\">\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteProjectName\" class=\"form-control-plain-text\" placeholder=\"Project Name\"\n                name=\"ProjectName\" [(ngModel)]=\"deleteProject.projectName\" disabled=\"disabled\">\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n          <button class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutComponent } from \"./admin/about/about.component\";\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"login\", pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"signup\", component: SignUpComponent },\n  { path: \"about\", component: AboutComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\nimport { LoginService } from './Services/login.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { RouterLoggerService } from './Services/router-logger.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent\n{\n  constructor(public loginService: LoginService, private domSanitizer: DomSanitizer, private routerLoggerService: RouterLoggerService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        let userName = (this.loginService.currentUserName) ? this.loginService.currentUserName : \"anonymous\";\n\n        let logMsg = new Date().toLocaleString() + \": \" + userName + \" navigates to \" + event.url;\n\n        this.routerLoggerService.log(logMsg).subscribe();\n      }\n    });\n  }\n\n  onSearchClick() {\n    console.log(this.loginService.currentUserName);\n  }\n}","<nav class=\"navbar navbar-expand-sm bg-success navbar-dark\">\n    <a class=\"navbar-brand\" href=\"#\">\n        Angular Task Manager\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mynav\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"mynav\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n                <a class=\"nav-link\" [routerLink]=\" [ '/admin', 'dashboard' ] \">Dashboard</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\" [ '/about' ] \">About</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n                <a class=\"nav-link\" [routerLink]=\" [ '/admin', 'projects' ] \">Projects</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n                <a class=\"nav-link\" href=\"#\">{{loginService.currentUserName}}</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n                <a class=\"nav-link\" href=\"#\" (click)=\"loginService.Logout()\">Logout</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName == null\">\n                <a class=\"nav-link\" [routerLink]=\" [ '/login' ] \">Login</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName == null\">\n                <a class=\"nav-link\" [routerLink]=\" [ '/signup' ] \">Sign Up</a>\n            </li>\n        </ul>\n        <form class=\"form-inline my-2 my-lg-0\">\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"search\"><i class=\"fa fa-search\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n            </div>\n            <button class=\"btn btn-warning my2- my-sm-0\" type=\"button\" (click)=\"onSearchClick()\">Search</button>\n        </form>\n    </div>\n</nav>\n\n<div class=\"container-fluid\">\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { JwtModule } from \"@auth0/angular-jwt\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminModule } from './admin/admin.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JwtInterceptorService } from './Services/jwt-interceptor.service';\nimport { JwtUnAuthorizedInterceptorService } from './Services/jwt-un-authorized-interceptor.service';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { AlertDirective } from './Directives/alert.directive';\nimport { RepeaterDirective } from './Directives/repeater.directive';\nimport { EmployeeModule } from './employee/employee.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignUpComponent,\n    AlertDirective,\n    RepeaterDirective\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AdminModule,\n    EmployeeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () =>\n        {\n          return (sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\") as string).token : null)\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptorService,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtUnAuthorizedInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class ClientLocation\n{\n    clientLocationID: any;\n    clientLocationName: any;\n\n    constructor()\n    {\n        this.clientLocationID = null;\n        this.clientLocationName = null;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CanActivateGuardService } from 'src/app/Services/can-activate-guard.service';\nimport { TasksComponent } from '../tasks/tasks.component';\n\nconst routes: Routes = [\n  { path: \"employee\", canActivate: [ CanActivateGuardService ], data: { expectedRole: \"Employee\" }, children: [\n    { path: \"tasks\", component: TasksComponent },\n  ]},\n\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes) \n  ]\n})\n\nexport class EmployeeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EmployeeRoutingModule } from './employee-routing/employee-routing.module';\n\n\n\n@NgModule({\n  declarations: [\n    TasksComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    EmployeeRoutingModule\n  ]\n})\nexport class EmployeeModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tasks works!</p>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from './project';\n\n@Pipe({\n  name: 'filter',\n  pure:false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: Project[] | any, searchBy: string, searchText: string): any\n  {\n    if (value == null)\n    {\n      return value;\n    }\n\n    let resultArray = [];\n    for (let item of value)\n    {\n      if (String(item[searchBy]).toLowerCase().indexOf(searchText.toLowerCase()) >= 0)\n      {\n        resultArray.push(item);\n      }\n    }\n\n    return resultArray;\n  }\n}\n\n","export class LoginViewModel\n{\n    UserName: string = \"\";\n    Password: string = \"\";\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginViewModel } from '../login-view-model';\nimport { LoginService } from '../Services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit\n{\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: string = \"\";\n\n  constructor(private loginService: LoginService, private router: Router) \n  {\n  }\n\n  ngOnInit()\n  {\n  }\n\n  onLoginClick(event: any) {\n    this.loginService.Login(this.loginViewModel).subscribe(\n      (response) => {\n        this.router.navigate([\"/admin\", \"dashboard\"]);\n      },\n      (error) => {\n        console.log(error);\n        this.loginError = \"Invalid Username or Password\";\n      },\n    );\n  }\n\n}\n","<form>\n  <div class=\"row\">\n    <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\n      <div class=\"card mt-4\">\n        <div class=\"card-header bg-secondary text-white\">\n          <h3>Login</h3>\n          <div appAlert [error]=\"loginError\" *ngIf=\"loginError\"></div>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"form-group form-row\">\n            <label for=\"UserName\" class=\"col-md-4 col-form-label\">Username</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"Username\" [(ngModel)]=\"loginViewModel.UserName\"\n                name=\"UserName\" autofocus=\"autofocus\">\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"Password\" class=\"col-md-4 col-form-label\">Password</label>\n            <div class=\"col-md-8\">\n              <input type=\"password\" class=\"form-control\" placeholder=\"Password\" [(ngModel)]=\"loginViewModel.Password\"\n                name=\"Password\">\n            </div>\n          </div>\n\n        </div>\n\n        <div class=\"card-footer text-right\">\n          <!-- <span class=\"text-danger\">{{loginError}}&nbsp;</span> -->\n          <button class=\"btn btn-primary\" (click)=\"onLoginClick($event)\">Login</button>\n\n          <!-- <div *appRepeater=\"5; let i\">\n            <a class=\"btn btn-primary\" data-toggle=\"collapse\" [href]=\" '#collapse' + i \" role=\"button\">Show Details</a>\n            <div class=\"collapse\" [id]=\" 'collapse' + i\">\n              <div class=\"card card-body\">\n                Actual details here\n              </div>\n            </div>\n          </div> -->\n        </div>\n      </div>\n    </div>\n  </div>\n</form>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numberToWord'\n})\nexport class NumberToWordPipe implements PipeTransform {\n\n  transform(value: any): any\n  {\n    if (value == null)\n    {\n      return null;\n    }\n    else\n    {\n      return this.inWords(value);\n    }\n  }\n\n  private inWords = (n: any) : any =>\n  {\n    let a = [\n      '', 'One', 'Two', 'Three', 'Four',\n      'Five', 'Six', 'Seven', 'Eight', 'Nine',\n      'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen',\n      'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\n    ];\n\n    let b = [\n      '', '', 'Twenty', 'Thirty', 'Forty',\n      'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'\n    ];\n\n    let g = [\n      '', 'Thousand', 'Million', 'Billion', 'Trillion', 'Quadrillion',\n      'Quintillion', 'Sextillion', 'Septillion', 'Octillion', 'Nonillion'\n    ];\n\n    const arr = (x: any) => Array.from(x);\n    const num = (x: any) => Number(x) || 0;\n    const str = (x: any) => String(x);\n    const isEmpty = (xs: any) => xs.length === 0;\n    const take = (n: any) => (xs: any) => xs.slice(0, n);\n    const drop = (n: any) => (xs: any) => xs.slice(n);\n    const reverse = (xs: any) => xs.slice(0).reverse();\n    const comp = (f: any) => (g: any) => (x: any) => f(g(x));\n    const not = (x: any) => !x;\n    const chunk = (n: any): any => (xs: any): any =>\n      isEmpty(xs) ? [] : [take(n)(xs), ...chunk(n)(drop(n)(xs))];\n\n    let makeGroup = ([ones, tens, huns]: any) =>\n    {\n      return [\n        num(huns) === 0 ? '' : a[huns] + ' Hundred ',\n        num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\n        a[tens + ones] || a[ones]\n      ].join('');\n    };\n\n    let thousand = (group: any, i: any) => group === '' ? group : `${group} ${g[i]}`;\n\n    if (typeof n === 'number')\n      return this.inWords(str(n));\n    else if (n === '0')\n      return 'Zero';\n    else\n      return comp(chunk(3))(reverse)(arr(n))\n        .map(makeGroup)\n        .map(thousand)\n        .filter(comp(not)(isEmpty))\n        .reverse()\n        .join(' ');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from './project';\n\n@Pipe({\n  name: 'paging'\n})\nexport class PagingPipe implements PipeTransform\n{\n  transform(value: Project[], currentPageIndex: number, pageSize: number): any\n  {\n    if (value == null)\n    {\n      return value;\n    }\n\n    let resultArray = [];\n    for (let i = currentPageIndex * pageSize; i < (currentPageIndex + 1) * pageSize; i++)\n    {\n      if (value[i])\n      {\n        resultArray.push(value[i]);\n      }\n    }\n    return resultArray;\n  }\n}\n","import { ClientLocation } from './client-location';\n\nexport class Project\n{\n    projectID: number | any;\n    projectName: string | any;\n    dateOfStart: string | any;\n    teamSize: number | any;\n    active: boolean | any;\n    status: string | any;\n    clientLocationID: number | any;\n    clientLocation: ClientLocation | any;\n\n    constructor()\n    {\n        this.projectID = null;\n        this.projectName = null;\n        this.dateOfStart = null;\n        this.teamSize = null;\n        this.active = true;\n        this.status = null;\n        this.clientLocationID = null;\n        this.clientLocation = new ClientLocation();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { CountriesService } from '../Services/countries.service';\nimport { Country } from '../country';\n\nimport { LoginService } from '../Services/login.service';\nimport { Router } from '@angular/router';\nimport { CustomeValidatoreService } from '../Services/custome-validatore.service';\nimport { SignUpViewModel } from '../sign-up-view-model';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n  signUpForm: FormGroup | any = null;\n  genders = [\"male\", \"female\"];\n  countries: Country[] = [];\n  registerError: string | null = null;\n\n  canLeave: boolean = true;\n\n  constructor(private countriesService: CountriesService, private formBuilder: FormBuilder, private customValidatorsService: CustomeValidatoreService, private loginService: LoginService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.countriesService.getCountries().subscribe((response) => {\n      this.countries = response;\n    });\n\n    this.signUpForm = this.formBuilder.group({\n      personName: this.formBuilder.group({\n        firstName: [null, [Validators.required, Validators.minLength(2)]],\n        lastName: [null, [Validators.required, Validators.minLength(2)]],\n      }),\n\n      email: [null, [Validators.required, Validators.email], [this.customValidatorsService.DuplicateEmailValidator()], { updateOn: 'blur' }],\n      mobile: [null, [Validators.required, Validators.pattern(/^[789]\\d{9}$/)]],\n      dateOfBirth: [null, [Validators.required, this.customValidatorsService.minimumAgeValidator(18)]],\n      password: [null, [Validators.required]],\n      confirmPassword: [null, [Validators.required]],\n      gender: [null, [Validators.required]],\n      countryID: [null, [Validators.required]],\n      receiveNewsLetters: [null],\n      skills: this.formBuilder.array([])\n    },\n      {\n        validators: [\n          this.customValidatorsService.compareValidator(\"confirmPassword\", \"password\")\n        ]\n      });\n\n    this.signUpForm.valueChanges.subscribe((value: any) => {\n      //console.log(value);\n      this.canLeave = false;\n    });\n  }\n\n  onSubmitClick() {\n    //Display current form value\n    this.signUpForm[\"submitted\"] = true;\n    console.log(this.signUpForm);\n\n    if (this.signUpForm.valid) {\n      var signUpVieModel = this.signUpForm.value as SignUpViewModel;\n      this.loginService.Register(signUpVieModel).subscribe(\n        (response) => {\n          this.canLeave = true;\n          this.router.navigate([\"/employee\", \"tasks\"]);\n        },\n        (error) => {\n          console.log(error);\n          this.registerError = \"Unable to submit\";\n        });\n    }\n\n    //setValue\n    // this.signUpForm.setValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\",\n    //   mobile: \"9876543210\",\n    //   dateOfBirth: \"2020-01-01\",\n    //   gender: \"male\",\n    //   countryID: 3,\n    //   receiveNewsLetters: true\n    // });\n\n    //patchValue\n    // this.signUpForm.patchValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n\n    //reset\n    //this.signUpForm.reset();\n\n    //reset with Parameters\n    // this.signUpForm.reset({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n  }\n\n  onAddSkill() {\n    var formGroup = new FormGroup({\n      skillName: new FormControl(null, [Validators.required]),\n      skillLevel: new FormControl(null, [Validators.required])\n    });\n\n    (<FormArray>this.signUpForm.get(\"skills\")).push(formGroup);\n  }\n\n  onRemoveClick(index: number) {\n    (<FormArray>this.signUpForm.get(\"skills\")).removeAt(index);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-8 col-xl-6 mx-auto\">\n\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmitClick()\">\n\n      <div class=\"card mt-1\">\n        <div class=\"card-header\">\n          <h4>Sign Up</h4>\n        </div>\n\n        <div class=\"card-body\">\n\n          <div class=\"form-group form-row\" formGroupName=\"personName\">\n            <label for=\"firstName\" class=\"col-md-4 col-form-label\">First Name:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" class=\"form-control\" formControlName=\"firstName\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('personName.firstName').valid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.required\">First name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.minlength\">First name should contain at least 2 characters</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\" formGroupName=\"personName\">\n            <label for=\"lastName\" class=\"col-md-4 col-form-label\">Last Name:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" class=\"form-control\" formControlName=\"lastName\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('personName.lastName').valid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.required\">Last name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.minlength\">Last name should contain at least 2 characters</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"email\" class=\"col-md-4 col-form-label\">Email:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" class=\"form-control\" formControlName=\"email\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('email').valid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.required\">Email can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.email\">Email is invalid</span>\n            \n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.uniqueEmail\">Email already exists</span>\n              \n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"mobile\" class=\"col-md-4 col-form-label\">Mobile:</label>\n            <div class=\"col-md-8\">\n              <input type=\"text\" name=\"mobile\" id=\"mobile\" placeholder=\"Mobile\" class=\"form-control\" formControlName=\"mobile\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('mobile').valid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.required\">Mobile can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.pattern\">Mobile is invalid</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\">Date of Birth:</label>\n            <div class=\"col-md-8\">\n              <input type=\"date\" name=\"dateOfBirth\" id=\"dateOfBirth\" placeholder=\"Date of Birth\" class=\"form-control\" formControlName=\"dateOfBirth\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('dateOfBirth').valid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.required\">Date of Birth can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.minAge\">Minimum Age must be 18</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"password\" class=\"col-md-4 col-form-label\">Password:</label>\n            <div class=\"col-md-8\">\n              <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" class=\"form-control\" formControlName=\"password\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('password').valid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) && signUpForm.get('password').errors?.required\">Password can't be blank</span>\n            </div>\n          </div>\n\n\n          <div class=\"form-group form-row\">\n            <label for=\"confirmPassword\" class=\"col-md-4 col-form-label\">Confirm Password:</label>\n            <div class=\"col-md-8\">\n              <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Confirm Password\" class=\"form-control\" formControlName=\"confirmPassword\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('confirmPassword').valid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) && signUpForm.get('confirmPassword').errors?.required\">Confirm Password can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.invalid && (signUpForm.dirty || signUpForm.touched || signUpForm.submitted) && signUpForm.errors?.compareValidator\">Password and Confirm Password do not match</span>\n            </div>\n          </div>\n\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\">Gender:</label>\n            <div class=\"col-md-8\">\n\n              <div class=\"form-check-label form-check-inline\" *ngFor=\"let gender of genders\">\n                <input type=\"radio\" name=\"gender\" [id]=\"gender\" [value]=\"gender\" class=\"form-check-input\" formControlName=\"gender\">\n                <label [for]=\"gender\" class=\"form-check-label\">{{gender}}</label>\n              </div>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('gender').invalid && (signUpForm.get('gender').dirty || signUpForm.get('gender').touched || signUpForm.submitted) && signUpForm.get('gender').errors?.required\">Please select gender</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label for=\"countryID\" class=\"col-md-4 col-form-label\">Country:</label>\n            <div class=\"col-md-8\">\n              <select name=\"countryID\" id=\"countryID\" class=\"form-control\" formControlName=\"countryID\" [ngClass]=\"{\n                'is-invalid': signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted),\n                'is-valid': signUpForm.get('countryID').valid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let country of countries\" [value]=\"country.countryID\">\n                  {{country.countryName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) && signUpForm.get('countryID').errors?.required\">Please select country</span>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\"></label>\n            <div class=\"col-md-8\">\n              <input type=\"checkbox\" name=\"receiveNewsLetters\" id=\"receiveNewsLetters\" value=\"true\" class=\"form-check-input\" formControlName=\"receiveNewsLetters\">\n              <label for=\"receiveNewsLetters\" class=\"form-check-label\">Receive News Letters</label>\n            </div>\n          </div>\n\n          <div class=\"form-group form-row\">\n            <label class=\"col-md-4 col-form-label\">Skills:</label>\n            <div class=\"col-md-8\" formArrayName=\"skills\">\n              <div class=\"row\" *ngFor=\"let skill of signUpForm.get('skills').controls; let i = index\" [formGroupName]=\"i\">\n\n                <div class=\"col-5 mb-3\">\n                  <input type=\"text\" name=\"skillName\" id=\"skillName\" placeholder=\"Skill Name\" formControlName=\"skillName\" class=\"form-control\" [ngClass]=\"{\n                    'is-invalid': skill.get('skillName').invalid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted),\n    \n                    'is-valid': skill.get('skillName').valid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted) }\">\n                </div>\n\n                <div class=\"col-4\">\n                  <select name=\"level\" id=\"level\" formControlName=\"skillLevel\" class=\"form-control\" [ngClass]=\"{\n                    'is-invalid': skill.get('skillLevel').invalid && (skill.get('skillLevel').dirty || skill.get('skillLevel').touched || signUpForm.submitted),\n    \n                    'is-valid': skill.get('skillLevel').valid && (skill.get('skillLevel').dirty || skill.get('skillLevel').touched || signUpForm.submitted) }\">\n                    <option value=\"null\">Please Select</option>\n                    <option value=\"Beginner\">Beginner</option>\n                    <option value=\"Intermediate\">Intermediate</option>\n                    <option value=\"Professional\">Professional</option>\n                    <option value=\"Expert\">Expert</option>\n                  </select>\n                </div>\n\n                <div class=\"col-3\">\n                  <button class=\"btn btn-danger\" type=\"button\" (click)=\"onRemoveClick(i)\">Remove</button>\n                </div>\n              </div>\n\n              <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddSkill()\">Add Skill</button>\n            </div>\n\n          </div>\n\n          <!-- {{signUpForm.value | json}} -->\n        </div>\n\n        <div class=\"card-footer\">\n          <button class=\"btn btn-success float-right\">Create Account</button>\n          <div class=\"text-danger\">{{registerError}}</div>\n        </div>\n\n      </div>\n\n    </form>\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}